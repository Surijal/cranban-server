{"version":3,"sources":["lib/auth-service.js","lib/AuthProvider.js","pages/Signup.js","pages/Login.js","components/Navbar.js","lib/projects-service.js","components/projects/ProjectCard.js","components/projects/AddProject.js","pages/ProjectsList.js","components/projects/EditProject.js","lib/tasks-service.js","components/tasks/AddTask.js","components/tasks/FilterTasks.js","components/projects/ProjectDetails.js","lib/users-service.js","components/user/DeleteUser.js","components/user/EditUser.js","components/user/UserProfile.js","components/NavbarBot.js","components/AnonRoute.js","components/PrivateRoute.js","components/tasks/EditTask.js","components/tasks/TaskDetails.js","App.js","index.js"],"names":["baseURL","process","axiosRequestFunctions","this","auth","axios","create","withCredentials","user","username","password","email","post","then","data","response","get","React","createContext","Consumer","Provider","withAuth","WrappedComponent","login","signup","logout","isLoggedin","isLoading","props","Component","AuthProvider","state","authService","setState","catch","err","console","log","me","value","children","handleFormSubmit","event","preventDefault","handleChange","target","name","onSubmit","type","onChange","to","style","borderRadius","padding","background","onClick","projectsAxiosRequest","getAllProjects","projects","getUserProjects","userId","id","getSingleProject","createProject","oneProject","title","description","deadline","newProject","updateProject","updatedProject","put","deleteProject","projectToDelete","delete","ProjectCard","className","projectData","_id","isShowing","toggleForm","handleInput","e","handleSubmit","projectsService","refreshProjectList","placeholder","cols","rows","listOfProjects","getUserListOfProjects","length","map","project","key","singleProject","projectId","refreshProjectDetails","tasksService","getSingleTask","tasks","getTasksByProject","singleTask","taskId","createTask","newTask","status","done","updateTask","updatedTask","deleteTask","taskToDelete","refreshSingleProject","htmlFor","defaultValue","FilterProject","toggleFilterStatus","statusFilter","renderFilterByTypeForm","toggleFilterType","typeFilter","input","filter","task","ProjectDetails","match","params","history","push","filterType","renderEditForm","statusBacklog","statusTesting","statusToDO","statusDone","statusDoing","userService","getUserById","getUserByEmail","datat","patchUser","userData","patch","deleteUser","updatedUser","singleUser","component","rest","render","toggleChange","updatedTasks","isChecked","refreshTaskDetails","checked","TaskDetails","getProjectTask","projectTasks","App","exact","path","Signup","Login","ProjectsList","UserProfile","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.c03a27e4.chunk.js","sourcesContent":["import axios from 'axios';\n\nconst baseURL = process.env.REACT_APP_API_URL;\n\nclass Auth {\n  constructor() {\n    this.auth = axios.create({\n      baseURL: baseURL,\n      withCredentials: true,\n    });\n  }\n\n  signup(user) {\n    const { username, password, email } = user;\n    return this.auth\n      .post('/auth/signup', { username, password, email })\n      .then(({ data }) => data);\n  }\n\n  login(user) {\n    const { username, password } = user;\n    return this.auth\n      .post('/auth/login', { username, password })\n      .then(({ data }) => data);\n  }\n\n  logout() {\n    return this.auth.post('/auth/logout', {}).then(response => response.data);\n  }\n\n  me() {\n    return this.auth.get('/auth/me').then(response => response.data);\n  }\n}\n\nconst axiosRequestFunctions = new Auth();\n\nexport default axiosRequestFunctions;\n","//\tlib/AuthProvider.js\n\nimport React from 'react';\nimport authService from './auth-service'; // IMPORT functions for axios requests to API\nconst { Consumer, Provider } = React.createContext();\n\n// HOC to create Consumer\nconst withAuth = WrappedComponent => {\n  return class extends React.Component {\n    render() {\n      return (\n        <Consumer>\n          {/* <Consumer> component provides callback which receives Providers \"value\" object */}\n          {/* (value) => { <WrappedComponent />}  */}\n          {({ login, signup, user, logout, isLoggedin, isLoading }) => {\n            return (\n              <WrappedComponent\n                login={login}\n                signup={signup}\n                user={user}\n                logout={logout}\n                isLoggedin={isLoggedin}\n                isLoading={isLoading}\n                {...this.props}\n              />\n            );\n          }}\n        </Consumer>\n      );\n    }\n  };\n};\n\n// Provider\nclass AuthProvider extends React.Component {\n  state = { isLoggedin: false, user: null, isLoading: true };\n\n  componentDidMount() {\n    authService\n      .me()\n      .then(user =>\n        this.setState({ isLoggedin: true, user: user, isLoading: false }),\n      )\n      .catch(err =>\n        this.setState({ isLoggedin: false, user: null, isLoading: false }),\n      );\n  }\n\n  signup = user => {\n    const { username, password, email } = user;\n\n    authService\n      .signup({ username, password, email })\n      .then(user => this.setState({ isLoggedin: true, user }))\n      .catch(err => console.log(err));\n  };\n\n  login = user => {\n    const { username, password } = user;\n\n    console.log('user', user);\n    \n\n    authService\n      .login({ username, password })\n      .then(user => this.setState({ isLoggedin: true, user }))\n      .catch(err => console.log(err));\n  };\n\n  logout = () => {\n    authService\n      .logout()\n      .then(() => this.setState({ isLoggedin: false, user: null }))\n      .catch(err => console.log(err));\n  };\n\n  render() {\n    const { isLoading, isLoggedin, user } = this.state;\n    const { login, logout, signup } = this;\n\n    return (\n      <Provider value={{ isLoading, isLoggedin, user, login, logout, signup }}>\n        {this.props.children}\n      </Provider>\n    );\n  }\n}\n\nexport { Consumer, withAuth };\n\nexport default AuthProvider;","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { withAuth } from '../lib/AuthProvider';\n\nclass Signup extends Component {\n  state = { \n                username: '', \n                password: '',\n                email: \"\"\n                };\n\n  handleFormSubmit = event => {\n    event.preventDefault();\n    const { username, password, email } = this.state;\n    //  console.log('Signup -> form submit', { username, password });\n    this.props.signup({ username, password, email }); // props.signup is Provided by withAuth() and Context API\n  };\n\n  handleChange = event => {\n    const { name, value } = event.target;\n    this.setState({ [name]: value });\n  };\n\n  render() {\n    const { username, password, email } = this.state;\n    return (\n      <div>\n        <h1>Sign Up</h1>\n        <form onSubmit={this.handleFormSubmit}>\n          <label>Username:</label>\n          <input\n            type=\"text\"\n            name=\"username\"\n            value={username}\n            onChange={this.handleChange}\n          />\n\n          <label>Password:</label>\n          <input\n            type=\"password\"\n            name=\"password\"\n            value={password}\n            onChange={this.handleChange}\n          />\n\n          <label>email:</label>\n          <input\n            type=\"email\"\n            name=\"email\"\n            value={email}\n            onChange={this.handleChange}\n          />\n\n\n          <input type=\"submit\" value=\"Signup\" />\n        </form>\n\n        <p>Already have account?</p>\n        <Link to={'/login'}> Login</Link>\n      </div>\n    );\n  }\n}\n\nexport default withAuth(Signup);\n","import React, { Component } from 'react';\nimport { withAuth } from '../lib/AuthProvider';\n\nclass Login extends Component {\n  state = { username: '', password: '' };\n\n  handleFormSubmit = event => {\n    event.preventDefault();\n    const { username, password } = this.state;\n    this.props.login({ username, password });\n  };\n\n  handleChange = event => {\n    const { name, value } = event.target;\n    this.setState({ [name]: value });\n  };\n\n  render() {\n    const { username, password } = this.state;\n\n    return (\n      <div>\n        <h1>Login</h1>\n        <form onSubmit={this.handleFormSubmit}>\n          <label>Username:</label>\n          <input\n            type=\"text\"\n            name=\"username\"\n            value={username}\n            onChange={this.handleChange}\n          />\n\n          <label>Password:</label>\n          <input\n            type=\"password\"\n            name=\"password\"\n            value={password}\n            onChange={this.handleChange}\n          />\n\n          <input type=\"submit\" value=\"Login\" />\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default withAuth(Login);\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { withAuth } from '../lib/AuthProvider';\n\nclass Navbar extends Component {\n  render() {\n    const { user, logout, isLoggedin } = this.props;\n    return (\n      <div\n        style={{ borderRadius: '5px', padding: '20px', background: '#686de0' }}>\n        {isLoggedin ? (\n          <div>\n            <p>username: {user.username}</p>\n            <button onClick={logout}>Logout</button>\n\n\n            <br />\n          \n            \n          </div>\n\n          \n        ) : (\n          <div>\n            <Link to=\"/login\">\n              {' '}\n              <button>Login</button>{' '}\n            </Link>\n            <br />\n\n            <Link to=\"/signup\">\n              {' '}\n              <button>Signup</button>{' '}\n            </Link>\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default withAuth(Navbar);\n","import axios from 'axios';\n\nconst baseURL = process.env.REACT_APP_API_URL;\n\nclass Project {\n    constructor () {\n\n        \n        this.projects = axios.create({\n            baseURL: `${baseURL}/api/`,\n            withCredentials: true,\n        })\n    } \n\n\n    getAllProjects = () => {\n        return this.projects\n            .get('/projects')\n            .then( (response ) => {\n                const listOfProjects = response.data;\n                \n                return listOfProjects;\n            })\n            .catch((err) => console.log(err))\n    }\n\n\n    getUserProjects = (userId) => {\n\n        const  id  = userId;\n\n        return this.projects\n            .get(`/projects/user/${id}`)\n            .then( response => {\n                const userProjects = response.data\n\n                return userProjects\n            })\n            .catch( err => console.log(err))\n    }\n\n\n    getSingleProject = (id) => {\n        \n        return this.projects\n            .get(`/projects/${id}`)\n            .then( response => {\n                    const singleProject = response.data\n\n                    return singleProject;\n                })\n            .catch( err => console.log(err))\n    }\n\n\n    createProject = (oneProject) => {\n        const { title, description, deadline } = oneProject;\n\n\n        return this.projects\n        .post('/projects', { title, description, deadline })\n        .then( response => {\n            const {newProject} = response.data;\n\n            return newProject;\n        })\n        .catch( err => console.log(err))\n    }\n\n\n    updateProject = (updatedProject) => {\n        const { title, description, deadline, id } = updatedProject;\n\n        return this.projects\n            .put(`/projects/${id}`, { title, description, deadline })\n            .then( (response) => {\n                const { updatedProject } = response.data;\n\n                return updatedProject;\n            })\n            .catch( err => console.log(err))\n    }\n    \n\n    deleteProject = (projectToDelete) => {\n        const id = projectToDelete\n\n        return this.projects\n            .delete(`/projects/${id}`)\n            \n    } \n}\n\n\nconst projectsAxiosRequest = new Project();\n\n\nexport default projectsAxiosRequest;","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\n\n\nclass ProjectCard extends Component {\n\n    state = {\n        title: '',\n        description: '',\n        deadline: ''\n    }\n\n\n    render() {\n\n        return (\n            <div className=\"project-card\">\n                <Link to={`/projects/${this.props.projectData._id}`}>\n                    <h2>{this.props.projectData.title}</h2>\n                    <p>{this.props.projectData.description}</p>\n                </Link>\n            </div> \n        )\n    }\n}\n\n\nexport default ProjectCard;","import React, { Component } from 'react'\n\nimport { withAuth } from './../../lib/AuthProvider';\nimport projectsService from './../../lib/projects-service';\n\n\n\nclass AddProject extends Component {\n\n    state = {\n        title: '',\n        description: '',\n        deadline: '',\n        isShowing: false\n    }\n\n    toggleForm = () => {\n        this.setState({isShowing: !this.state.isShowing})\n    }\n\n\n\n    handleInput = e => {\n        const { name, value } = e.target;\n\n        this.setState({[name]: value})\n    }\n\n    handleSubmit = e => {\n        e.preventDefault()\n    \n        this.createProject()\n    }\n    \n    \n    createProject = () => {\n        const { title, description, deadline } = this.state;\n        \n        \n        projectsService.createProject({ title, description, deadline })\n            .then( (newProject) => {\n                this.setState({ title: '', description: '', deadline: '', isShowing: false});\n                this.props.refreshProjectList()\n            })\n            .catch((err) => console.log(err))\n    }\n\n\n    render() {\n        \n        return (\n            <div>\n                <button onClick={this.toggleForm} className=\"button\">Add Project</button>\n\n                {\n                    !this.state.isShowing ?\n                    null\n                    :\n                    (\n                    \n                        <form onSubmit={this.handleSubmit}  className=\"edit-form\">\n                            <label>Title:</label>\n                            <input \n                                    type=\"text\"\n                                    name='title'\n                                    placeholder=\"Title\"\n                                    value={this.state.title}\n                                    onChange={ (e) => this.handleInput(e)}\n                                />\n\n                            <label>Description:</label>\n                            <textarea\n                                    type=\"text\"\n                                    name=\"description\" \n                                    placeholder=\"Description\"\n                                    id=\"\" \n                                    cols=\"30\" \n                                    rows=\"10\"\n                                    value={this.state.description}\n                                    onChange={ (e) => this.handleInput(e)}\n                                />\n\n                            <label>Deadline:</label>\n                            <input\n                                    type=\"date\"\n                                    name=\"deadline\" \n                                    placeholder=\"Deadline\"\n                                    value={this.state.deadline}\n                                    onChange={ (e) => this.handleInput(e)}\n                                />\n\n                            <button className=\"button\">Add Project</button>    \n                        </form>\n                    )\n                }\n            </div>\n\n        )\n    }\n}\n\n\n\nexport default  withAuth(AddProject);","import React, { Component } from 'react'\n\nimport projectsService from './../lib/projects-service';\nimport { withAuth } from './../lib/AuthProvider';\n\nimport ProjectCard from './../components/projects/ProjectCard';\nimport AddProject from './../components/projects/AddProject';\n\n\n\nclass ProjectsList extends Component {\n\n    state = {\n        listOfProjects: []\n    }\n\n    getUserListOfProjects = () => {\n\n        const  userId  = this.props.user._id;\n\n        projectsService.getUserProjects(userId)\n            .then( (listOfProjects) => {\n                \n                this.setState({ listOfProjects })\n            })\n            .catch( (err) => console.log(err))\n    }\n\n    componentDidMount() {\n        this.getUserListOfProjects()\n    }\n\n    render() {\n        \n        const { listOfProjects } = this.state;\n        \n        return (\n            <>\n                {\n\n                    !listOfProjects ?\n                        <h1>Loading</h1>\n                        :\n                        (\n                            <div>\n                                <AddProject refreshProjectList={this.getUserListOfProjects} />\n\n                                    {(this.state.listOfProjects.length) ? this.state.listOfProjects.map( project => {\n                                        return(\n                        \n\n                                            <ProjectCard key={project._id} projectData={project} /> \n                                            \n                                            \n                                        )\n                                    })\n                                    : <h1> Add your first project </h1>\n                                    }\n                            </div>\n                        )\n                }\n            </>\n        )\n    }\n}       \n\n\nexport default withAuth(ProjectsList);","import React, { Component } from 'react';\n\nimport { withAuth } from './../../lib/AuthProvider';\nimport projectsService from './../../lib/projects-service';\n\n\nclass EditProject extends Component {\n\n\n    constructor(props) {\n        super(props)\n            this.state = {\n                title: '',\n                description: '',\n                deadline: '',\n                updatedProject: null,\n                isShowing: false\n            }\n    }\n\n    \n    handleInput = e => {\n        const { name, value } = e.target;\n        \n        this.setState({[name]: value})\n    }\n\n\n    handleSubmit = e => {\n        e.preventDefault();\n\n        this.updateProject();\n    }\n\n    toggleForm = () => {\n        const { title, description, deadline } = this.props.singleProject\n\n        this.setState({isShowing: !this.state.isShowing, title, description, deadline})\n    }\n\n\n    updateProject = () => {\n        const { title, description, deadline } = this.state;\n        const id  = this.props.projectId;\n        \n        \n        projectsService.updateProject({ title, description, deadline, id })\n            .then( updatedProject => {\n                this.setState({\n                                        title: '',\n                                        description: '',\n                                        deadline: '',\n                                        updatedProject: null,\n                                        isShowing: false\n                                    })\n                this.props.refreshProjectDetails();\n            })\n            .catch( err => console.log(err))\n    }\n\n    render() {\n        return (\n            <div>\n\n                <button onClick={this.toggleForm}>Edit Project</button>\n\n                    {\n                        !this.state.isShowing ?\n                        null\n                        :\n                        (\n\n                            <div>\n                                <form onSubmit={this.handleSubmit} className=\"edit-form\">\n                                \n                                <input \n                                        type=\"text\"\n                                        name='title'\n                                        placeholder=\"Title\"\n                                        value={this.state.title}\n                                        onChange={ (e) => this.handleInput(e)}\n                                    />\n\n                                \n                                <textarea\n                                        type=\"text\"\n                                        name=\"description\" \n                                        placeholder=\"Description\"\n                                        id=\"\" \n                                        cols=\"30\" \n                                        rows=\"10\"\n                                        value={this.state.description}\n                                        onChange={ (e) => this.handleInput(e)}\n                                    />\n\n\n                                    <input\n                                            type=\"date\"\n                                            name=\"deadline\" \n                                            placeholder=\"Deadline\"\n                                            value={this.state.deadline}\n                                            onChange={ (e) => this.handleInput(e)}\n                                        />\n\n                                \n                                <button className=\"button\">Update Project</button>    \n                                </form>\n                            </div>\n                        )\n                    }\n            </div>\n        )\n    }\n}\n\n\n\nexport default withAuth(EditProject);","import axios from 'axios';\n\n\nclass Task {\n    constructor(){\n\n        this.tasks = axios.create( {\n            baseURL: 'http://localhost:5000/api/',\n            withCredentials: true,\n        })\n    }\n\n\n    getSingleTask = (id) => {\n\n        return this.tasks\n            .get(`/tasks/${id}` )\n            .then( response => {\n                const singleTask = response.data;\n\n                return singleTask\n            })\n            .catch( err => console.log(err))\n    }\n\n\n    getTasksByProject = (singleTask) => {\n        const { projectId, taskId } = singleTask;\n        \n        \n\n        return this.tasks\n            .get(`/projects/${projectId}/tasks/${taskId}`)\n            .then( response => {\n                const projectsTasks = response.data;\n                \n                return projectsTasks;\n            })\n            .catch( err => console.log(err))\n    }\n\n\n    createTask = (newTask) => {\n        const { title, description, deadline, projectId, status, type, done } = newTask;\n\n        return this.tasks\n            .post('/tasks', { title, description, deadline, projectId, status, type, done } )\n            .then( response => {\n                const { newTask  } = response.data\n\n                return newTask\n            })\n            .catch( err => console.log(err))\n    }\n\n\n    updateTask = updatedTask => {\n        const { title, description, deadline, taskId, done, type, status } = updatedTask;\n\n        console.log('>>>>>>>>>>> TaskService', updatedTask);\n        \n\n        return this.tasks\n            .put(`/tasks/${taskId}`,  { title, description, deadline, done, type, status })\n            .then( response => {\n                const {updatedTask} = response.data;\n\n                return updatedTask\n            })\n            .catch(err => console.log(err))\n    }\n\n\n    deleteTask = (taskToDelete) => {\n        const id = taskToDelete;\n\n        return this.tasks\n            .delete(`/tasks/${id}`, )\n            .catch( err => console.log(err))\n    }\n\n}\n\n\nconst tasksService = new Task();\n\nexport default  tasksService;","import React, { Component } from 'react'\n\nimport tasksService from './../../lib/tasks-service';\nimport { withAuth } from './../../lib/AuthProvider';\n\n\nclass AddTask extends Component {\n        \n    constructor(props){\n        super(props)\n        \n        this.state = {\n            title: '',\n            description: '',\n            deadline: '',\n            isShowing: false,\n            type: '',\n            status: '',\n            done: false\n        }\n    }\n\n\n\n    handleChange = e => {\n        const {name, value } = e.target\n\n        this.setState({[name]:value})\n    }\n    \n\n    handleSubmit = e => {\n        e.preventDefault()\n\n        this.createTask()\n    }\n\n\n    toggleForm = e => {\n        this.setState({ isShowing: !this.state.isShowing})\n    }\n\n\n    createTask =  (newTask) => {\n        const { title, description, deadline, status, type, done } = this.state;\n        const projectId = this.props.projectId;\n\n        \n        tasksService.createTask({ title, description, deadline, projectId, status,type, done })\n            .then( (newTask) => {\n                this.setState({ title: '', description: '', deadline: '', isShowing: false})\n                this.props.refreshSingleProject(newTask)\n            })\n            .catch(err => console.log(err))\n    }   \n\n\n    render() {\n        return (\n            <div>\n                <button onClick={this.toggleForm}>Add Task</button>\n\n                    {\n                        !this.state.isShowing ?\n                        null\n                        :\n                        (\n                            <div>\n                                <form onSubmit={this.handleSubmit} className=\"edit-form\">\n                                    \n                                    <input \n                                            type=\"text\"\n                                            name='title'\n                                            placeholder=\"Title\"\n                                            value={this.state.title}\n                                            onChange={ (e) =>this.handleChange(e)}\n                                        />\n\n                                    \n                                    <textarea\n                                            type=\"text\"\n                                            name=\"description\" \n                                            placeholder=\"Description\"\n                                            id=\"\" \n                                            cols=\"30\" \n                                            rows=\"10\"\n                                            value={this.state.description}\n                                            onChange={ (e) => this.handleChange(e)}\n                                        />\n\n                                <label htmlFor=\"status\">Status</label>\n                                <select \n                                    type=\"text\"\n                                    name='status'\n                                    id=\"status\"\n                                    \n                                    defaultValue='to do'\n                                    // value={this.state.type}\n                                    onChange={ (e) => this.handleChange(e)}\n                                >\n                                    <option >to do</option>\n                                    <option >doing</option>\n                                    <option >done</option>\n                                    <option >testing</option>\n                                    <option >backlog</option>\n                                </select>\n\n                                <label htmlFor=\"type\">Type {this.props.type}</label>\n                                <select \n                                    type=\"text\"\n                                    name='type'\n                                    id=\"testid\"\n                                    \n                                    defaultValue='preperation'\n                                    // value={this.state.type}\n                                    onChange={ (e) => this.handleChange(e)}\n                                >\n                                    <option >frontend</option>\n                                    <option >backend</option>\n                                    <option >styles</option>\n                                    <option >preperation</option>\n                                </select>\n\n                                    <label>Deadline:</label>\n                                    <input\n                                            type=\"date\"\n                                            name=\"deadline\" \n                                            placeholder=\"Deadline\"\n                                            value={this.state.deadline}\n                                            onChange={ (e) => this.handleChange(e)}\n                                        />\n                                    \n                                    <button>Submit</button>    \n                                </form>\n                            </div>\n                        )\n\n                    }\n            </div>\n        )\n    }\n}\n\n\n\nexport default withAuth(AddTask);","import React, { Component } from 'react'\n\nimport { Link } from 'react-router-dom'\n\nclass FilterProject extends Component {\n\n    constructor(props) {\n        super(props)\n    \n        this.state = {\n            title: '',\n            description: '',\n            deadline: '',\n            singleProject: null,\n            tasks: [],\n            typeFilter: '',\n            statusFilter: '',\n            isShowing: false\n            \n\n        }\n    }    \n\n    toggleFilterStatus = ( e) => {\n        const { value } = e.target;\n        const {singleProject} = this.props.singleProject;\n\n        this.setState({isShowing: !this.state.isShowing, statusFilter: value})\n\n        this.renderFilterByTypeForm(value)\n    }\n\n    toggleFilterType = e => {\n        const { value } = e.target;\n\n        this.setState({ typeFilter: value})\n    }\n\n\n    renderFilterByTypeForm = input => {\n        const value = input;\n        \n        const { singleProject } = this.props.singleProject;\n        this.setState({ singleProject: singleProject})\n\n        if ( !this.state.isShowing) {\n            this.props.singleProject.tasks.filter( task => {\n                return task.status === value;\n            })\n            .map( task => {\n                return (\n                    <div key={task._id} className=\"task-container\">\n                        <Link to={`/projects/${this.props.singleProject._id}/tasks/${task._id}`} >\n                            <h5>{task.title}</h5>\n                            <p>{task.description}</p>\n                        </Link>\n                    </div>\n                )\n            })\n        }\n        else {\n            this.props.singleProject.tasks.filter( task => {\n                return task.type === value;\n            })\n            .map( task => {\n                return (\n                    <div key={task._id} className=\"task-container\">\n                        <Link to={`/projects/${this.props.singleProject._id}/tasks/${task._id}`} >\n                            <h5>{task.title}</h5>\n                            <p>{task.description}</p>\n                        </Link>\n                    </div>\n                )\n            })\n        }\n    }\n\n    componentDidMount(){\n        const { singleProject } = this.props.singleProject\n\n        this.setState({singleProject: {singleProject}})        \n        this.renderFilterByTypeForm()\n    }\n    \n\n    render() {\n        return (\n            <div>\n                <h1>{this.state.statusFilter}</h1>\n                <h2>{this.state.typeFilter}</h2>\n\n                <div className=\"filter-container\">\n                    <button className=\"button\" onClick={this.toggleFilterStatus} value=\"backlog\">Backlog</button>\n                    <button className=\"button\" onClick={this.toggleFilterStatus} value=\"to do\">to do</button>\n                    <button className=\"button\" onClick={this.toggleFilterStatus} value=\"doing\">doing</button>\n                    <button className=\"button\" onClick={this.toggleFilterStatus} value=\"testing\">testing</button>\n                    <button className=\"button\" onClick={this.toggleFilterStatus} value=\"done\">done</button>\n\n                </div>\n\n                <form>\n                    <label htmlFor=\"type\">Type {this.props.type}</label>\n                    <select \n                        type=\"text\"\n                        name='type'\n                        id=\"testid\"\n                        \n                        defaultValue='preperation'\n                        // value={this.state.type}\n                        onChange={ (e) => this.toggleFilterType(e)}\n                    >\n                        <option >frontend</option>\n                        <option >backend</option>\n                        <option >styles</option>\n                        <option >preperation</option>\n                    </select>\n                </form>\n\n                {/* {\n                    ( !this.state.isShowing) ? \n                    this.props.singleProject.tasks.filter( task => {\n                        return task.status === this.state.statusFilter;\n                    })\n                    .map( task => {\n                        return (\n                            <div key={task._id} className=\"task-container\">\n                                <Link to={`/projects/${this.props.singleProject._id}/tasks/${task._id}`} >\n                                    <h5>{task.title}</h5>\n                                    <p>{task.description}</p>\n                                </Link>\n                            </div>\n                        )\n                    })\n                    :\n                    null\n                } */}\n\n\n                {\n                    ( !this.state.isShowing) ? \n                    this.props.singleProject.tasks.filter( task => {\n                        return task.status === this.state.statusFilter;\n                    })\n                    .filter( task => {\n                        return task.type === this.state.typeFilter;\n                    })\n                    .map( task => {\n                        return (\n                            <div key={task._id} className=\"task-container edit-form\" >\n                                <Link to={`/projects/${this.props.singleProject._id}/tasks/${task._id}`} >\n                                    <h5>{task.title}</h5>\n                                    <p>{task.description}</p>\n                                </Link>\n                            </div>\n                        )\n                    })\n                    :\n                    <h1> No Task to Display</h1>\n                }\n                    {/* this.props.singleProject.tasks.map( task => {\n                        return (\n                            <div key={task._id} className=\"task-container\">\n                                <Link to={`/projects/${this.props.singleProject._id}/tasks/${task._id}`} >\n                                    <h5>{task.title}</h5>\n                                    <p>{task.description}</p>\n                                </Link>\n                            </div>\n                        )\n                    })\n                }         */}\n            </div>\n                \n                    \n            \n            \n\n\n\n        )\n    }\n}\n\n\n\nexport default FilterProject;","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\n\nimport projectsService from './../../lib/projects-service';\n\nimport EditProject from './EditProject';\nimport AddTask from './../tasks/AddTask';\nimport FilterTask from '../tasks/FilterTasks';\n\n\nclass ProjectDetails extends Component {\n\n\n    constructor(props) {\n        super(props)\n    \n        this.state = {\n            title: '',\n            description: '',\n            deadline: '',\n            singleProject: null,\n            tasks: [],\n            filterType: '',\n            statusBacklog: false,\n            statusTesting: false,\n            statusToDO: false,\n            statusDone: false,\n            statusDoing:false\n\n        }\n    }\n\n    \n    getSingleProject = () => {\n        const id  = this.props.match.params.id;\n        \n        projectsService.getSingleProject(id) \n        .then( (singleProject) => {\n            this.setState({ singleProject })\n        })\n        .catch( err => console.log(err))\n    }\n    \n    \n    deleteProject = () => {\n        const id = this.props.match.params.id\n        \n        projectsService.deleteProject(id)\n            .then( () => {\n                this.props.history.push('/projects')\n                \n            })\n            .catch( err => console.log(err))\n    }\n\n\n    handleChange = (e) => {\n        const value  = e.target;\n\n        this.setState({ filterType: value })\n    }\n\n    renderFilterByTypeForm = input => {\n        const value = input;\n\n        if ( value === 'All in list') {\n            this.state.singleProject.tasks.filter( task => {\n                return task.status === 'testing';\n            })\n            .map( task => {\n                return (\n                    <div key={task._id} className=\"task-container\">\n                        <Link to={`/projects/${this.state.singleProject._id}/tasks/${task._id}`} >\n                            <h5>{task.title}</h5>\n                            <p>{task.description}</p>\n                        </Link>\n                    </div>\n                )\n            })\n        }\n        else {\n            this.state.singleProject.tasks.filter( task => {\n                return task.type === value;\n            })\n            .map( task => {\n                return (\n                    <div key={task._id} className=\"task-container\">\n                        <Link to={`/projects/${this.state.singleProject._id}/tasks/${task._id}`} >\n                            <h5>{task.title}</h5>\n                            <p>{task.description}</p>\n                        </Link>\n                    </div>\n                )\n            })\n        }\n    }\n\n\n    renderEditForm = () => {\n\n        if (!this.state.title && this.state.description ) return null\n        else {\n            return (\n\n                <EditProject projectId={this.state.singleProject._id} singleProject={this.state.singleProject} refreshProjectDetails={this.getSingleProject} {...this.props}/>\n            )\n\n        }\n    }\n\n\n    \n    componentDidMount() {\n        const { id } = this.props.match.params;   \n        this.getSingleProject(id)\n    }\n    \n    render() {\n        \n        const { singleProject } = this.state;\n        \n        return (\n            <div>\n                \n                    {\n                        !singleProject\n                            ? <h1>Loading</h1>\n                            :\n                            (\n                                <>\n                                <div className=\"project-details-container\">\n                                        <div className=\"project-title-container edit-form\">\n                                            <h2>TITLE: {this.state.singleProject.title}</h2>\n                                            <p>DESCRIPTION: {this.state.singleProject.description}</p>\n                                            <p>deadline: {this.state.singleProject.deadline}</p>\n                                            <div>{this.renderEditForm()}</div>\n\n                                            <div>\n                                                <button\n                                                            className=\"button\"\n                                                            onClick={ () => this.deleteProject()}   \n                                                            className='button'>\n                                                            Delete Project\n                                                </button>\n                                \n                                                <AddTask\n                                                            className=\"button\"\n                                                            projectId={this.state.singleProject._id} \n                                                            refreshSingleProject={this.getSingleProject}\n                                                        />\n\n                                                <FilterTask singleProject={singleProject} {...this.props}/>\n                                            </div>\n                                        </div>\n                                </div>\n                                    \n                                    \n                                \n                                    \n                                </>\n                            )\n\n                    }\n                \n            </div>\n        )\n    }\n}\n\n\n\nexport default ProjectDetails;\n\n\n\n\n{/* <div className='project-details'>\n                                \n                                <div className=\"task-type-container\">\n                                    <h2>BACKLOG</h2>\n\n                                    {  \n                                        \n                                        \n                                        (!this.state.statusBacklog) ? this.state.singleProject.tasks.filter((task) =>{\n                                            return task.status === 'backlog'\n                                        })\n                                        .map( task => {\n\n                                            return (\n                                                <div key={task._id} className=\"task-container\">\n                                                    <Link to={`/projects/${this.state.singleProject._id}/tasks/${task._id}`} >\n                                                        <h5>{task.title}</h5>\n                                                        <p>{task.description}</p>\n                                                    </Link>\n                                                </div>\n                                            )\n                                        })\n                                        : <h4>No Tasks to Display</h4>\n                                    }\n                                </div>\n\n\n                                <div className=\"task-type-container\">\n                                    <h2>TO DO</h2>\n\n                                    {\n                                        (!this.state.statusToDO) ? this.state.singleProject.tasks.filter((task) =>{\n                                            return task.status === 'to do'\n                                        })\n                                        .map( task => {\n\n                                            return (\n                                                <div key={task._id} className=\"task-container\">\n                                                    \n                                                    <Link to={`/projects/${this.state.singleProject._id}/tasks/${task._id}`} >\n                                                        <h5>{task.title}</h5>\n                                                        <p>{task.description}</p>\n                                                    </Link>\n                                                </div>\n                                            )\n                                        })\n                                        : <h4>No Tasks to Display</h4>\n                                    }\n                                </div>\n\n                                <div className=\"task-type-container\">\n                                    <h2>DOING</h2>\n\n                                    {\n                                        (this.state.statusDoing) ? this.state.singleProject.tasks.filter((task) =>{\n                                            return task.status === 'doing'\n                                        })\n                                        .map( task => {\n\n                                            return (\n                                                <div key={task._id} className=\"task-container\">\n                                                    <Link to={`/projects/${this.state.singleProject._id}/tasks/${task._id}`} >\n                                                        <h5>{task.title}</h5>\n                                                        <p>{task.description}</p>\n                                                    </Link>\n                                                </div>\n                                            )\n                                        })\n                                        : <h4>No Tasks to Display</h4>\n                                    }\n                                </div>\n\n\n                                <div className=\"task-type-container\">\n                                    <h2>TESTING</h2>\n                                    <form>\n                                        <label htmlFor=\"type\">Type {this.props.type}</label>\n                                        <select \n                                            type=\"text\"\n                                            name='type'\n                                            id=\"testid\"\n                                            // onChange={ e => this.handleInput(e)}\n                                            \n                                            // defaultValue={type}\n                                            value={this.state.type}\n                                            onChange={ (e) => this.handleChange(e)}\n                                        >\n                                            <option>All in list</option>\n                                            <option >frontend</option>\n                                            <option >backend</option>\n                                            <option >styles</option>\n                                            <option >preperation</option>\n                                        </select>    \n                                    </form>\n\n                                    \n\n\n                                    {\n                                        (!this.state.statusTesting) ? this.state.singleProject.tasks.filter((task) =>{\n                                            return task.status === 'testing'\n                                        })\n                                        .map( task => {\n\n                                            return (\n                                                <div key={task._id} className=\"task-container\">\n                                                    <Link to={`/projects/${this.state.singleProject._id}/tasks/${task._id}`} >\n                                                        <h5>{task.title}</h5>\n                                                        <p>{task.description}</p>\n                                                    </Link>\n                                                </div>\n                                            )\n                                        })\n                                        : <h4>No Tasks to Display</h4>\n                                    }\n                                </div>\n\n                                \n                                <div className=\"task-type-container\">\n                                    <h2>DONE</h2>\n\n                                    {\n                                        (this.state.stat) ? this.state.singleProject.tasks.filter((task) =>{\n                                            return task.status === 'done'\n                                        })\n                                        .map( task => {\n\n                                            return (\n                                                <div key={task._id} className=\"task-container\">\n                                                    <Link to={`/projects/${this.state.singleProject._id}/tasks/${task._id}`} >\n                                                        <h5>{task.title}</h5>\n                                                        <p>{task.description}</p>\n                                                    </Link>\n                                                </div>\n                                            )\n                                        })\n                                        : <h4>No Tasks to Display</h4>\n                                    } \n                                </div>\n                            </div> */}\n","import axios from 'axios';\n\nconst baseURL = process.env.REACT_APP_API_URL;\n\nclass User {\n    constructor() {\n        this.user = axios.create( {\n            baseURL: `${baseURL}/api/users`,\n            withCredentials: true,\n        })\n    }\n\n    getUserById = (id) => {\n\n        return this.user\n            .get(`/${id}`)\n            .then( response => {\n                const singleUser = response.data\n\n                return singleUser;\n            })\n            .catch(err => console.log(err))\n    }\n\n\n    getUserByEmail = (email) => {\n\n        return this.user\n            .get(`/email/${email}`)\n            .then( response  => {\n                const singleUser = response.datat;\n\n                return singleUser\n            })\n            .catch(err => console.log(err))\n    }\n\n\n    patchUser = userData => {\n\n        const { username, password, email, id } = userData;\n        \n\n        return this.user\n            .patch(`/${id}`, { username, password, email })\n            .then( response => {\n                const singleUser = response.data;\n\n                return singleUser\n            })\n            .catch( err => console.log(err))\n    }\n\n\n    deleteUser = id => {\n        \n        return this.user\n            .delete(`/${id}`)\n            .then( response => {\n                const singleUser = response.data\n\n                return singleUser\n            })\n            .catch( err => console.log)\n    }\n\n}\n\n\nconst userService = new User();\n\nexport default userService;","import React, { Component } from 'react';\nimport { withAuth } from '../../lib/AuthProvider';\n\nimport userService from '../../lib/users-service';\n\nclass DeleteUser extends Component {\n\n    constructor(props){\n        super(props)\n\n        this.state = {\n            password: '',\n            isShowing: false\n        }\n    }\n\n        toggleForm = e => {\n            this.setState({isShowing: !this.state.isShowing})\n        }\n\n\n        handleInput = e => {\n            const { name, value } = e.target\n\n            this.setState({[name]: value})\n        }\n\n        handleSubmit = e => {\n            e.preventDefault()\n\n            this.deleteUser()\n        }\n\n\n        deleteUser = () =>{\n            const userId = this.props.user._id;\n            console.log('>>>>>>>>>>>> USER PROFILE ID', this.props.user._id)\n\n            userService.deleteUser(userId)\n                .then( () => {\n                    this.props.history.push('/')\n                })\n                .catch( err => console.log(err))\n        }\n\n\n    \n\n\n    render() {\n        return (\n            <div>\n                <button onClick={this.toggleForm}>Delete User Profile</button>\n\n                {\n                    !this.state.isShowing ?\n                    null\n                    :\n                    <div>\n                        <h2>Confirm your password to delete Profile</h2>\n\n                        <form onSubmit={this.handleSubmit}>\n                            <label>Password:</label>\n                            <input\n                                    type=\"password\"\n                                    name=\"password\" \n                                    placeholder=\"password\"\n                                    id=\"\" \n                                    value={this.state.password}\n                                    onChange={ (e) => this.handleInput(e)}\n                            />\n\n                            <button>Delete Profile</button> \n                        </form>\n\n                    </div>\n                }\n\n                \n            </div>\n        )\n    }\n}\n\n\nexport default withAuth(DeleteUser);","import React, { Component } from 'react';\n\nimport { withAuth } from './../../lib/AuthProvider';\nimport userService from './../../lib/users-service';\n\nimport DeleteUser from './DeleteUser';\n\n\nclass EditUser extends Component {\n\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            username: '',\n            password: '',\n            email: '',\n            isShowing: ''\n        }\n    }\n\n\n    toggleForm = () => {\n        this.setState({isShowing: !this.state.isShowing})\n    }\n\n\n    handleInput = e => {\n        const { name, value } = e.target;\n\n        this.setState({[name]: value})\n    }\n\n    handleSubmit = e => {\n        e.preventDefault()\n\n        this.patchUser();\n    }\n\n\n    patchUser = () => {\n        const { username, password, email } = this.state;\n        const id = this.props.user._id;\n        \n        // const id = this.props.match.params;\n\n        userService.patchUser( { username, password, email, id } )\n            .then( updatedUser => {\n\n                this.setState({username: '', password: '', email: ''})\n            })\n            .catch( err => console.log(err))\n    }\n\n\n\n    render() {\n        \n\n        return (\n            <div>\n\n            \n                <button onClick={this.toggleForm}>Edit User</button>\n\n                <DeleteUser />\n\n                    {\n                        !this.state.isShowing ?\n                        null\n                        :\n                        (\n\n                            <div>\n                                <form onSubmit={this.handleSubmit}>\n                                <label>username:</label>\n                                <input \n                                        type=\"text\"\n                                        name='username'\n                                        placeholder={this.props.user.username}\n                                        value={this.state.username}\n                                        onChange={ (e) => this.handleInput(e)}\n                                    />\n\n                                <label>Email:</label>\n                                <input\n                                        type=\"text\"\n                                        name=\"email\" \n                                        placeholder={this.props.user.email}\n                                        id=\"\" \n                                        value={this.state.email}\n                                        onChange={ (e) => this.handleInput(e)}\n                                />\n\n                                <label>Password:</label>\n                                <input\n                                        type=\"password\"\n                                        name=\"password\" \n                                        placeholder=\"password\"\n                                        id=\"\" \n                                        value={this.state.password}\n                                        onChange={ (e) => this.handleInput(e)}\n                                />\n\n                                <button>Update</button>    \n                                </form>\n                            </div>\n                        )\n                    }\n            </div>\n        )\n    }\n}\n\n\nexport default withAuth(EditUser);","import React, { Component } from 'react';\nimport { withAuth } from '../../lib/AuthProvider';\nimport userService from '../../lib/users-service';\n\nimport EditUser from './EditUser';\n\n\n\nclass UserProfile extends Component {\n\n    constructor(props){\n        super(props)\n\n        this.state ={\n            username: \"\",\n            password: '',\n            email: '',\n            isShowing: ''\n        }\n    }\n\n    getUserById = () => {\n        const id = this.props.match.params.id;\n\n        userService.getUserById(id)\n            .then( singleUser => {\n                const { username, password, email } = singleUser;\n\n                this.setState({ username, password, email } )\n            })\n            .catch( err => console.log(err))\n    }\n\n\n    componentDidMount() {\n        this.getUserById()\n    }\n\n\n    render() {\n        return (\n            <div>\n\n                <h1>UserProfile</h1>\n                <h1>{this.state.username}</h1>\n                <p>{this.state.email}</p>\n\n                <EditUser />\n            </div>\n        )\n    }\n}\n\n\nexport default withAuth(UserProfile)","import React, { Component } from 'react';\nimport { withAuth } from './../lib/AuthProvider';\nimport { Link } from 'react-router-dom';\n\n\nclass NavbarBot extends Component {\n    render() {\n        const { user, isLoggedin } = this.props;\n\n    \n        return (\n            <div >\n                { isLoggedin ? (\n\n                    <div className='navbot'>\n                        <div className='nav-user-profile-link'>\n                            <Link to={`/user/${user._id}`}>\n                            {' '}\n                            <button>User Profile</button>{' '}\n                            </Link>\n                        </div>\n\n                        <div className='nav-projects-link'>\n                            <Link to=\"/projects\">\n                            {' '}\n                            <button>Projects</button>{' '}\n                            </Link>\n                        </div>    \n\n                        <div className='nav-graph-link'>\n                            <Link to=\"/projects\">\n                            {' '}\n                            <button>Graph</button>{' '}\n                            </Link>\n                        </div>\n\n                        <div className='nav-add-project-link'>\n                            <Link to={`/projects`}>\n                            {' '}\n                            <button> ProAddject</button>{' '}\n                            </Link>\n                        </div>\n                    </div>\n\n                )  \n                :\n                (\n                    <div className=\"navbot\">\n                        <h1>HELLO NavbarBot</h1>\n                    </div>\n                )}\n\n\n            </div>\n        )\n    }\n}\n\n\nexport default withAuth(NavbarBot);","import React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport { withAuth } from '../lib/AuthProvider';\n\nfunction AnonRoute({ component: Component, isLoggedin, isLoading, ...rest }) {\n\n  if (isLoading) {\n    return <h1>Loading</h1>\n  }\n  else {\n    return (\n      <Route\n        {...rest}\n        render={props =>\n          !isLoggedin ? <Component {...props} /> : <Redirect to=\"/projects\" />\n        }\n      />\n    );\n  }\n}\n\nexport default withAuth(AnonRoute);","import React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport { withAuth } from '../lib/AuthProvider';\n\nfunction PrivateRoute({ component: Component, isLoggedin, isLoading, ...rest }) {\n\n  if (isLoading) {\n    return <h1>Loading</h1>\n  }\n  else {\n    return (\n      <Route\n        {...rest}\n        render={props =>\n          isLoggedin ? <Component {...props} /> : <Redirect to=\"/login\" />\n        }\n      />\n    );\n  }\n}\n\nexport default withAuth(PrivateRoute);","import React, { Component } from 'react';\nimport { withAuth } from '../../lib/AuthProvider';\nimport tasksService from '../../lib/tasks-service';\n\n\nclass EditTask extends Component {\n\n    constructor(props){\n        super(props)\n\n        this.state = {\n            title: \"\",\n            description: \"\",\n            deadline: '',\n            isShowing: null,\n            done: false,\n            type: '',\n            status: '',\n            singleTask: {}\n        }\n    }\n\n\n    handleInput = e => {\n        const { name, value } = e.target;\n        this.setState({[name]: value})\n    }\n\n\n    handleSubmit = e => {\n        e.preventDefault();\n\n        this.updateTask()\n    }\n\n\n    toggleForm = () => {\n        const { description, title, deadline, done, type, status } = this.props.singleTask;\n\n        this.setState({ isShowing: !this.state.isShowing,  description, title, deadline, done, type, status })\n    }\n\n    toggleChange = () => {\n        this.setState({ done: !this.state.done})\n    }\n\n\n    updateTask = () => {\n        const { title, description, deadline, done, type, status } = this.state;\n        const taskId = this.props.taskId;\n\n        if (!title && !description && !deadline && !done && !type ) return\n        else {\n\n\n            tasksService.updateTask({ title, description, deadline, done, type, status, taskId })\n            .then( updatedTasks => {\n                this.setState({\n                    title: '',\n                    description: '',\n                    deadline: '',\n                    updatedProject: null,\n                    isShowing: false,\n                    isChecked: false,\n                    done: false,\n                    type: '',\n                    status: ''\n                })\n                this.props.refreshTaskDetails();\n            })\n            .catch( err => console.log(err))\n        }\n\n        \n    }\n    \n    \n    render() {\n    \n        const { title, description, type, status, deadline, done } = this.props.singleTask\n        return (\n            <div>\n\n                <button onClick={this.toggleForm}  className='button'>Edit Task</button>\n\n                    {\n                        !this.state.isShowing ?\n                        null\n                        :\n                        (\n\n                            <div>\n                                <form onSubmit={this.handleSubmit} className=\"edit-form\">\n                                <label>Title:</label>\n                                <input \n                                        type=\"text\"\n                                        name='title'\n                                        // defaultValue={title}\n                                        value={this.state.title}\n                                        onChange={ (e) => this.handleInput(e)}\n                                    />\n\n                                <label>Description:</label>\n                                <textarea\n                                        type=\"text\"\n                                        name=\"description\"\n                                        value={this.state.description}\n                                        id=\"\" \n                                        cols=\"30\" \n                                        rows=\"5\"\n                                        // defaultValue={description}\n                                        onChange={ (e) => this.handleInput(e)}\n                                    >\n                                    {description}\n\n                                    </textarea>\n\n                                <label htmlFor=\"done\">Done</label>\n                                <input \n                                    type=\"checkbox\"\n                                    name='done'\n                                    id=\"done\"\n                                    defaultValue={done}\n                                    onChange={ (e) => {\n                                        this.handleInput(e)\n                                        this.toggleChange(e)\n                                    }}\n                                    checked={this.state.done}\n                                />\n\n                                <label htmlFor=\"status\">Status</label>\n                                <select \n                                    type=\"text\"\n                                    name='status'\n                                    id=\"status\"\n                                    \n                                    // defaultValue={status}\n                                    value={this.state.type}\n                                    onChange={ (e) => this.handleInput(e)}\n                                >\n                                    <option >to do</option>\n                                    <option >doing</option>\n                                    <option >done</option>\n                                    <option >testing</option>\n                                    <option >backlog</option>\n                                </select>\n\n                                <label htmlFor=\"type\">Type {this.props.type}</label>\n                                <select \n                                    type=\"text\"\n                                    name='type'\n                                    id=\"testid\"\n                                    \n                                    // defaultValue={type}\n                                    value={this.state.type}\n                                    onChange={ (e) => this.handleInput(e)}\n                                >\n                                    <option >frontend</option>\n                                    <option >backend</option>\n                                    <option >styles</option>\n                                    <option >preperation</option>\n                                </select>\n\n                                <label>Deadline:</label>\n                                <input\n                                        type=\"date\"\n                                        name=\"deadline\" \n                                        placeholder=\"Deadline\"\n                                        // defaultValue={deadline}\n                                        value={this.state.deadline}\n                                        onChange={ (e) => this.handleInput(e)}\n                                    />\n                                \n                                <button className='button'>Update</button>    \n                                </form>\n                            </div>\n                        )\n                    }\n            </div>\n        )\n    }\n}\n\n\nexport default withAuth(EditTask);","import React, { Component } from 'react';\n\nimport tasksService from './../../lib/tasks-service';\nimport EditTask from './EditTask';\n\n\n\nclass TaskDetails extends Component {\n        \n        constructor(props) {\n            super(props)\n                this.state = {\n                    title: '',\n                    description: '',\n                    deadline: '',\n                    projectTasks: null,\n                    taskId: '',\n                    projectId: '',\n                    done: '',\n                    type: '',\n                    status: '',\n                    singleTask: {}\n\n                }\n        }\n    \n\n        getSingleTask = () => {\n        \n\n        const {id} = this.props.match.params\n        \n        tasksService.getSingleTask(id)\n        .then( singleTask => {\n            \n                this.setState({\n                    title: singleTask.title,\n                    description: singleTask.description,\n                    deadline: singleTask.deadline,\n                    taskId: singleTask._id,\n                    projectId: singleTask.project,\n                    done: singleTask.done,\n                    type: singleTask.type,\n                    singleTask: singleTask,\n                    status: singleTask.status\n                })\n            })\n            .catch( err => console.log(err))\n        }\n        \n        \n        getProjectTask = () => {\n            const { projectId, taskId } = this.props\n            \n            tasksService.getTasksByProject({ projectId, taskId })\n                .then( singleTask => {\n                    \n                    this.setState({singleTask})\n                })\n                .catch( err => console.log(err))\n        }\n\n\n        deleteTask = () => {\n            const  id  = this.props.match.params.id\n            const projectId = this.state.projectId\n            \n            \n            tasksService.deleteTask(id)\n            .then( (deleteTask) => {\n                    \n                    this.props.history.push(`/projects/${projectId}`)\n                })\n                .catch( err => console.log(err))\n        }\n\n\n        componentDidMount(){\n            \n            this.getSingleTask()\n        }\n\n\n    render() {\n\n        const { title, description, deadline, taskId, status, type, done } = this.state;\n        const singleTask = { title, description, deadline, taskId , status, type, done} \n\n        return (\n            <div className=\"edit-form\">\n                            <h2>TITLE: {title}</h2>\n                            \n                            <p>DESCRIPTION: {description}</p>\n                            <p>Deadline: {deadline}</p>\n                            <p>Status: {status}</p>\n                            <p>Type: {type}</p>\n                            <p>Done: {done}</p>\n                            \n                            <div className=\"action-container\">\n                                <button\n                                    className=\"button\"\n                                    onClick={ () => this.deleteTask() }\n                                >\n                                Delete Task\n                                </button>\n                                \n                                <EditTask\n                                    className=\"button\"\n                                    taskId={taskId} \n                                    refreshTaskDetails={this.getSingleTask} \n                                    {...this.props} \n                                    singleTask={singleTask}/>\n\n                            </div>\n            </div>\n        )\n    }\n}\n\n\nexport default  TaskDetails;","import React, { Component } from 'react';\nimport { Switch } from 'react-router-dom';\n\nimport Signup from './pages/Signup';\nimport Login from './pages/Login';\n// import Private from './pages/Private';\nimport Navbar from './components/Navbar';\nimport ProjectsList from './pages/ProjectsList';\nimport ProjectDetails from './components/projects/ProjectDetails';\nimport UserProfile from './components/user/UserProfile';\nimport NavbarBot from './components/NavbarBot';\n\nimport AnonRoute from './components/AnonRoute';\nimport PrivateRoute from './components/PrivateRoute';\n\nimport './styles/navbot.css'\nimport TaskDetails from './components/tasks/TaskDetails';\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <Navbar />\n        <NavbarBot />\n\n          <Switch>\n            <AnonRoute exact path=\"/signup\" component={Signup} />\n            <AnonRoute exact path=\"/login\" component={Login} />\n            {/* <PrivateRoute exact path=\"/private\" component={Private} /> */}\n            <PrivateRoute exact path=\"/projects\" component={ProjectsList} />\n            <PrivateRoute exact path=\"/projects/:id\" component={ProjectDetails} />\n            <PrivateRoute exact path=\"/user/:id\" component={UserProfile} />\n            <PrivateRoute exact path=\"/projects/:id/tasks/:id\" component={TaskDetails}/>\n          </Switch>\n\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css'\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport AuthProvider from './lib/AuthProvider';\n\nReactDOM.render(\n  <Router>\n    <AuthProvider>\n      <App />\n    </AuthProvider>\n  </Router>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}