{"version":3,"sources":["lib/auth-service.js","lib/users-service.js","lib/AuthProvider.js","pages/Signup.js","pages/Login.js","pages/Private.js","lib/projects-service.js","components/projects/ProjectCard.js","components/projects/AddProject.js","pages/ProjectsList.js","components/projects/EditProject.js","lib/tasks-service.js","components/tasks/AddTask.js","components/tasks/FilterTasks.js","components/projects/ProjectDetails.js","components/user/DeleteUser.js","components/user/EditUser.js","components/user/UserProfile.js","components/NavbarBot.js","pages/Home.js","components/AnonRoute.js","components/PrivateRoute.js","components/tasks/EditTask.js","components/tasks/TaskDetails.js","App.js","index.js"],"names":["baseURL","process","axiosRequestFunctions","this","auth","axios","create","withCredentials","user","username","password","email","post","then","data","response","get","userService","getUserById","id","catch","err","console","log","getUserByEmail","datat","patchUser","userData","patch","deleteUser","delete","React","createContext","Consumer","Provider","withAuth","WrappedComponent","login","signup","logout","isLoggedin","isLoading","props","Component","AuthProvider","state","userId","_id","setState","authService","me","value","children","handleFormSubmit","event","preventDefault","handleChange","target","name","className","onSubmit","autoComplete","htmlFor","type","onChange","to","Private","projectsAxiosRequest","getAllProjects","projects","getUserProjects","getSingleProject","createProject","oneProject","title","description","deadline","newProject","updateProject","updatedProject","put","deleteProject","projectToDelete","ProjectCard","projectData","key","isShowing","toggleForm","handleInput","e","handleSubmit","projectsService","refreshProjectList","convertDate","newDeadline","Date","toISOString","substring","placeholder","cols","rows","onClick","listOfProjects","getUserListOfProjects","length","map","project","match","params","history","push","newDate","singleProject","projectId","refreshProjectDetails","tasksService","getSingleTask","tasks","getTasksByProject","singleTask","taskId","createTask","newTask","status","done","updateTask","updatedTask","deleteTask","taskToDelete","refreshSingleProject","FilterTask","typeFilter","statusFilter","isFiltered","allTasks","toggleFilterStatus","toggleFilterType","renderFilteredTasks","filter","task","statusMatch","typeMatch","renderAllTasks","data-ride","href","role","data-slide","aria-hidden","ProjectDetails","filterType","renderFilterByTypeForm","input","renderEditForm","toggleAddForm","showAddForm","toggleEditForm","showEditForm","statusBacklog","statusTesting","statusToDO","statusDone","showButtons","DeleteUser","withRouter","updatedUser","singleUser","refreshUserProfile","NavbarBot","goBack","alt","src","width","height","component","rest","render","toggleChange","updatedTasks","isChecked","TaskDetails","getProjectTask","projectTasks","refreshTaskDetails","App","exact","path","Signup","Login","Home","ProjectsList","UserProfile","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.a0f9b50d.chunk.js","sourcesContent":["import axios from 'axios';\n\nconst baseURL = process.env.REACT_APP_API_URL;\n\nclass Auth {\n  constructor() {\n    this.auth = axios.create({\n      baseURL: baseURL,\n      withCredentials: true,\n    });\n  }\n\n  signup(user) {\n    const { username, password, email } = user;\n    return this.auth\n      .post('/auth/signup', { username, password, email })\n      .then(({ data }) => data);\n  }\n\n  login(user) {\n    const { username, password } = user;\n    return this.auth\n      .post('/auth/login', { username, password })\n      .then(({ data }) => data);\n  }\n\n  logout() {\n    return this.auth.post('/auth/logout', {}).then(response => response.data);\n  }\n\n  me() {\n    return this.auth.get('/auth/me').then(response => response.data);\n  }\n}\n\nconst axiosRequestFunctions = new Auth();\n\nexport default axiosRequestFunctions;\n","import axios from 'axios';\n\nconst baseURL = process.env.REACT_APP_API_URL;\n\nclass User {\n    constructor() {\n        this.user = axios.create( {\n            baseURL: `${baseURL}/api/users`,\n            withCredentials: true,\n        })\n    }\n\n    getUserById = (id) => {\n\n        return this.user\n            .get(`/${id}`)\n            .then( response => {\n                const singleUser = response.data\n\n                return singleUser;\n            })\n            .catch(err => console.log(err))\n    }\n\n\n    getUserByEmail = (email) => {\n\n        return this.user\n            .get(`/email/${email}`)\n            .then( response  => {\n                const singleUser = response.datat;\n\n                return singleUser\n            })\n            .catch(err => console.log(err))\n    }\n\n\n    patchUser = userData => {\n\n        const { username, password, email, id } = userData;\n        \n\n        return this.user\n            .patch(`/${id}`, { username, password, email })\n            .then( response => {\n                const singleUser = response.data;\n\n                return singleUser\n            })\n            .catch( err => console.log(err))\n    }\n\n\n    deleteUser = id => {\n        \n        return this.user\n            .delete(`/${id}`)\n            .then( response => {\n                const singleUser = response.data\n\n                return singleUser\n            })\n            .catch( err => console.log)\n    }\n\n}\n\n\nconst userService = new User();\n\nexport default userService;","//\tlib/AuthProvider.js\n\nimport React from 'react';\nimport authService from './auth-service'; // IMPORT functions for axios requests to API\nimport userService from '../lib/users-service';\nconst { Consumer, Provider } = React.createContext();\n\n\n// HOC to create Consumer\nconst withAuth = WrappedComponent => {\n  return class extends React.Component {\n    render() {\n      return (\n        <Consumer>\n          {/* <Consumer> component provides callback which receives Providers \"value\" object */}\n          {/* (value) => { <WrappedComponent />}  */}\n          {({ login, signup, user, logout, isLoggedin, isLoading, deleteUser }) => {\n            return (\n              <WrappedComponent\n                login={login}\n                signup={signup}\n                user={user}\n                logout={logout}\n                isLoggedin={isLoggedin}\n                isLoading={isLoading}\n                deleteUser={deleteUser}\n                {...this.props}\n              />\n            );\n          }}\n        </Consumer>\n      );\n    }\n  };\n};\n\n// Provider\nclass AuthProvider extends React.Component {\n  state = { isLoggedin: false, user: null, isLoading: true };\n\n  componentDidMount() {\n    authService\n      .me()\n      .then(user =>\n        this.setState({ isLoggedin: true, user: user, isLoading: false }),\n      )\n      .catch(err =>\n        this.setState({ isLoggedin: false, user: null, isLoading: false }),\n      );\n  }\n\n\n  deleteUser = () => {\n\n    const userId = this.state.user._id\n\n    return userService.deleteUser(userId)\n                .then( () => {\n        this.setState({ isLoggedin: false, user: null, isLoading: false })\n        \n    })\n    .catch( err => console.log(err))                \n  }\n\n  signup = user => {\n    const { username, password, email } = user;\n\n    authService\n      .signup({ username, password, email })\n      .then(user => this.setState({ isLoggedin: true, user }))\n      .catch(err => console.log(err));\n  };\n\n  login = user => {\n    const { username, password } = user;\n\n    console.log('user', user);\n    \n\n    authService\n      .login({ username, password })\n      .then(user => this.setState({ isLoggedin: true, user }))\n      .catch(err => console.log(err));\n  };\n\n  logout = () => {\n    authService\n      .logout()\n      .then(() => this.setState({ isLoggedin: false, user: null }))\n      .catch(err => console.log(err));\n  };\n\n  render() {\n    const { isLoading, isLoggedin, user } = this.state;\n    const { login, logout, signup, deleteUser } = this;\n\n    return (\n      <Provider value={{ isLoading, isLoggedin, user, login, logout, signup, deleteUser }}>\n        {this.props.children}\n      </Provider>\n    );\n  }\n}\n\nexport { Consumer, withAuth };\n\nexport default AuthProvider;","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { withAuth } from '../lib/AuthProvider';\n\nclass Signup extends Component {\n  state = { \n                username: '', \n                password: '',\n                email: \"\"\n                };\n\n  handleFormSubmit = event => {\n    event.preventDefault();\n    const { username, password, email } = this.state;\n    //  console.log('Signup -> form submit', { username, password });\n    this.props.signup({ username, password, email }); // props.signup is Provided by withAuth() and Context API\n  };\n\n  handleChange = event => {\n    const { name, value } = event.target;\n    this.setState({ [name]: value });\n  };\n\n  render() {\n    const { username, password, email } = this.state;\n    return (\n      <div className=\"container mt-3\">\n        <div className=\"card\">\n          <div className=\"card-header\">\n              <h1>Sign Up</h1>\n          </div>\n\n          <div className=\"card-body\">\n              <form onSubmit={this.handleFormSubmit}  autoComplete=\"off\">\n\n                <div className=\"form-group\">\n                  <label htmlFor=\"signup-username\">Username:</label>\n                    <input\n                      type=\"text\"\n                      name=\"username\"\n                      value={username}\n                      autoComplete=\"off\"\n                      onChange={this.handleChange}\n                      id=\"signup-username\"\n                      className=\"form-control\"\n                    />\n\n                </div>\n\n                <div className=\"form-group\">\n                  <label htmlFor=\"signup-email\">email:</label>\n                  <input\n                    type=\"email\"\n                    name=\"email\"\n                    value={email}\n                    autoComplete=\"off\"\n                    onChange={this.handleChange}\n                    id=\"signup-email\"\n                    className=\"form-control\"\n                  />\n                </div>\n\n                <div className=\"form-group\">\n                  <label htmlFor=\"signup-password\">Password:</label>\n                  <input\n                    type=\"password\"\n                    name=\"password\"\n                    value={password}\n                    autoComplete=\"off\"\n                    onChange={this.handleChange}\n                    id=\"signup-password\"\n                    className=\"form-control\"\n                  />\n                </div>\n\n\n                <div className=\"d-flex justify-content-between\">\n                  <div>\n                    <input type=\"submit\" value=\"Signup\" autoComplete=\"off\" className=\"btn btn-primary mt-3\"/>\n\n                  </div>\n\n                  <div>\n                    <p>Already have account?</p>\n                    <Link to={'/login'}> Login</Link>\n\n                  </div>\n\n                </div>\n              </form>\n\n\n          </div>\n              <div className=\"card-footer d-flex justify-content-end\">\n\n            <Link to={'/'}> Back</Link>\n            </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default withAuth(Signup);\n","import React, { Component } from 'react';\nimport { withAuth } from '../lib/AuthProvider';\nimport { Link } from 'react-router-dom';\n\nclass Login extends Component {\n  state = { username: '', password: '' };\n\n  handleFormSubmit = event => {\n    event.preventDefault();\n    const { username, password } = this.state;\n    this.props.login({ username, password });\n  };\n\n  handleChange = event => {\n    const { name, value } = event.target;\n    this.setState({ [name]: value });\n  };\n\n  render() {\n    const { username, password } = this.state;\n\n    return (\n      <div className=\"container mt-5\">\n        <div className=\"card\">\n            <div className=\"card-header\">\n              <h1>Login</h1>\n            </div>\n\n              <div className=\"card-body\">\n                <form onSubmit={this.handleFormSubmit} autoComplete=\"off\">\n\n                  <div className=\"form-group\">\n                    <label htmlFor=\"login-username\">Username:</label>\n                    <input\n                      type=\"text\"\n                      name=\"username\"\n                      value={username}\n                      autoComplete=\"off\"\n                      onChange={this.handleChange}\n                      id=\"login-username\"\n                      className=\"form-control\"\n                    />\n\n                  </div>                \n\n                  <div className=\"form-group\">\n                    <label htmlFor=\"login-password\">Password:</label>\n                    <input\n                      type=\"password\"\n                      name=\"password\"\n                      value={password}\n                      autoComplete=\"off\"\n                      onChange={this.handleChange}\n                      id=\"login-password\"\n                      className=\"form-control\"\n                    />\n\n                  </div>\n\n                  <div className=\"d-flex justify-content-end\">\n                    <input type=\"submit\" value=\"Login\" autoComplete=\"off\" className=\"btn btn-primary\"/>\n                  </div>\n\n                </form>\n\n              </div>\n        \n\n            \n                  <div className=\"card-footer d-flex justify-content-end\">\n\n                    <Link to={'/'}> Back</Link>\n                  </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default withAuth(Login);\n","import React, { Component } from 'react';\n\nclass Private extends Component {\n  render() {\n    return (\n      <div>\n        <h1>Private Route</h1>\n      </div>\n    );\n  }\n}\n\nexport default Private;\n","import axios from 'axios';\n\nconst baseURL = process.env.REACT_APP_API_URL;\n\nclass Project {\n    constructor () {\n\n        \n        this.projects = axios.create({\n            baseURL: `${baseURL}/api/`,\n            withCredentials: true,\n        })\n    } \n\n\n    getAllProjects = () => {\n        return this.projects\n            .get('/projects')\n            .then( (response ) => {\n                const listOfProjects = response.data;\n                \n                return listOfProjects;\n            })\n            .catch((err) => console.log(err))\n    }\n\n\n    getUserProjects = (userId) => {\n\n        const  id  = userId;\n\n        return this.projects\n            .get(`/projects/user/${id}`)\n            .then( response => {\n                const userProjects = response.data\n\n                return userProjects\n            })\n            .catch( err => console.log(err))\n    }\n\n\n    getSingleProject = (id) => {\n        \n        return this.projects\n            .get(`/projects/${id}`)\n            .then( response => {\n                    const singleProject = response.data\n\n                    return singleProject;\n                })\n            .catch( err => console.log(err))\n    }\n\n\n    createProject = (oneProject) => {\n        const { title, description, deadline } = oneProject;\n\n\n        return this.projects\n        .post('/projects', { title, description, deadline })\n        .then( response => {\n            const {newProject} = response.data;\n\n            return newProject;\n        })\n        .catch( err => console.log(err))\n    }\n\n\n    updateProject = (updatedProject) => {\n        const { title, description, deadline, id } = updatedProject;\n\n        return this.projects\n            .put(`/projects/${id}`, { title, description, deadline })\n            .then( (response) => {\n                const { updatedProject } = response.data;\n\n                return updatedProject;\n            })\n            .catch( err => console.log(err))\n    }\n    \n\n    deleteProject = (projectToDelete) => {\n        const id = projectToDelete\n\n        return this.projects\n            .delete(`/projects/${id}`)\n            \n    } \n}\n\n\nconst projectsAxiosRequest = new Project();\n\n\nexport default projectsAxiosRequest;","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\n\n\nclass ProjectCard extends Component {\n\n    state = {\n        title: '',\n        description: '',\n        deadline: ''\n    }\n\n\n    render() {\n        \n        \n        const { _id, title, description } = this.props.projectData\n\n        return (\n            <div key={_id} className=\"card mt-3 mb-3\">\n                <Link   to={`/projects/${_id}`}>\n                    <div className=\"card-header\">Project:</div>\n\n                    \n                    <div className=\"card-body\">\n                    <h2 className=\"card-title\">{title}</h2>\n                        <p className=\"card-text\n                        \">{description}</p>\n\n                    </div>\n                </Link>\n            </div> \n        )\n    }\n}\n\n\nexport default ProjectCard;","import React, { Component } from 'react'\n\nimport { withAuth } from './../../lib/AuthProvider';\nimport projectsService from './../../lib/projects-service';\n\n\n\nclass AddProject extends Component {\n\n    state = {\n        title: '',\n        description: '',\n        deadline: '',\n        isShowing: false\n    }\n\n    toggleForm = () => {\n        this.setState({isShowing: !this.state.isShowing})\n    }\n\n\n\n    handleInput = e => {\n        const { name, value } = e.target;\n\n        this.setState({[name]: value})\n    }\n\n    handleSubmit = e => {\n        e.preventDefault()\n    \n        this.createProject()\n    }\n    \n    \n    createProject = () => {\n        const { title, description, deadline } = this.state;\n        \n        \n        projectsService.createProject({ title, description, deadline })\n            .then( (newProject) => {\n                this.setState({ title: '', description: '', deadline: '', isShowing: false});\n                this.props.refreshProjectList()\n            })\n            .catch((err) => console.log(err))\n    }\n\n    convertDate = () => {\n        const parsedDate = new Date ()\n        \n        var newDeadline = parsedDate.toISOString().substring( 0, 10)\n        this.setState({deadline: newDeadline})\n    }\n\n\n\n    componentDidMount(){\n        this.convertDate()\n    }\n\n\n    render() {\n        \n        return (\n            <div >\n\n                {\n                    !this.state.isShowing ?\n                    \n                        <button onClick={this.toggleForm} className=\"btn btn-primary\">Add Project</button>\n                    :\n                    (\n                    <div className=\"card mt-3\">\n                        <form onSubmit={this.handleSubmit}>\n                            \n                            <div className=\"card-header\">\n                                <input\n                                        className=\"form-control\"\n                                        type=\"text\"\n                                        name='title'\n                                        placeholder=\"Title\"\n                                        value={this.state.title}\n                                        onChange={ (e) => this.handleInput(e)}\n                                    />\n                            </div>\n\n                            <div className=\"card-body\">\n                                <textarea\n                                        className=\"form-control\"\n                                        type=\"text\"\n                                        name=\"description\" \n                                        placeholder=\"Description\"\n                                        id=\"\" \n                                        cols=\"30\" \n                                        rows=\"4\"\n                                        value={this.state.description}\n                                        onChange={ (e) => this.handleInput(e)}\n                                    />\n\n                                \n                                <input\n                                        className=\"form-control mb-3 mt-3\"\n                                        type=\"date\"\n                                        name=\"deadline\" \n                                        placeholder=\"Deadline\"\n                                        value={this.state.deadline}\n                                        onChange={ (e) => this.handleInput(e)}\n                                    />\n\n                            </div>\n                                <div className=\"card-footer d-flex justify-content-around\">\n                                <button className=\"btn btn-primary\">Submit</button> \n                            </div>\n                        </form>\n                    </div>\n                    )\n                }\n            </div>\n\n        )\n    }\n}\n\n\n\nexport default  withAuth(AddProject);","import React, { Component } from 'react'\n\nimport projectsService from './../lib/projects-service';\nimport { withAuth } from './../lib/AuthProvider';\n\nimport ProjectCard from './../components/projects/ProjectCard';\nimport AddProject from './../components/projects/AddProject';\n\n\n\nclass ProjectsList extends Component {\n\n    state = {\n        listOfProjects: []\n    }\n\n    getUserListOfProjects = () => {\n\n        const  userId  = this.props.user._id;\n\n        projectsService.getUserProjects(userId)\n            .then( (listOfProjects) => {\n                \n                this.setState({ listOfProjects })\n            })\n            .catch( (err) => console.log(err))\n    }\n\n    componentDidMount() {\n        this.getUserListOfProjects()\n    }\n\n    render() {\n        \n        const { listOfProjects } = this.state;\n        \n        return (\n            <>\n                {\n\n                    !listOfProjects ?\n                        <h1>Loading</h1>\n                        :\n                        (\n                            \n\n                                    <div className=\"container\">\n                                    <AddProject refreshProjectList={this.getUserListOfProjects} />\n                                        {(this.state.listOfProjects.length) ? this.state.listOfProjects.map( project => {\n\n                                            \n                                            return(\n                                                    \n                                                \n                                                    <div key={project._id}>\n                                                    <ProjectCard   projectData={project} /> \n                                                    </div>\n                                                    \n                                                \n                                            )\n                                        })\n                                        : \n\n                                        <h3>Create your first Project</h3>\n                                \n                                        }\n                                    </div>\n                            \n                        )\n                }\n            </>\n        )\n    }\n}       \n\n\nexport default withAuth(ProjectsList);","import React, { Component } from 'react';\n\nimport { withAuth } from './../../lib/AuthProvider';\nimport projectsService from './../../lib/projects-service';\n\n\nclass EditProject extends Component {\n\n\n    constructor(props) {\n        super(props)\n            this.state = {\n                title: '',\n                description: '',\n                deadline: '',\n                updatedProject: null,\n                isShowing: false\n            }\n    }\n\n    \n    handleInput = e => {\n        const { name, value } = e.target;\n        \n        this.setState({[name]: value})\n    }\n\n\n    handleSubmit = e => {\n        e.preventDefault();\n\n        this.updateProject();\n    }\n\n    toggleForm = () => {\n    \n        \n    \n            this.setState({isShowing: !this.state.isShowing})\n            \n        \n            \n    }\n\n\n    deleteProject = () => {\n        const id = this.props.match.params.id\n        \n        projectsService.deleteProject(id)\n            .then( () => {\n                this.props.history.push('/projects')\n                \n            })\n            .catch( err => console.log(err))\n    }\n\n    convertDate = () => {\n        const newDate = this.props.singleProject.deadline\n        const parsedDate = new Date (newDate)\n        \n        var newDeadline = parsedDate.toISOString().substring( 0, 10)\n        \n        this.setState({deadline: newDeadline})\n    }\n\n\n    updateProject = () => {\n        const { title, description, deadline } = this.state;\n        const id  = this.props.projectId;\n        \n        \n        projectsService.updateProject({ title, description, deadline, id })\n            .then( updatedProject => {\n                this.setState({\n                                        title: '',\n                                        description: '',\n                                        deadline: '',\n                                        updatedProject: null,\n                                        isShowing: false\n                                    })\n                this.props.refreshProjectDetails();\n            })\n            .catch( err => console.log(err))\n    }\n\n    componentDidMount(){\n        \n\n        const { deadline, title, description } = this.props.singleProject\n\n        this.setState({ deadline, title, description })\n        this.convertDate()\n    }\n\n    render() {\n\n        \n\n        return (\n            <>\n                        <div className=\"container\">\n                            <div className=\"card mt-5 mb-3 \">\n\n                            <div className=\"card-header\"> \n                                <h5 className=\"card-title\">Edit Project</h5>\n                            </div>\n                                <form onSubmit={this.handleSubmit}>\n                                \n                                    <div className=\"card-body\">\n                                    \n                                    <div className=\"form-group\">\n                                        <input \n                                                className=\"card-title form-control mt-3 mb-3\"\n                                                type=\"text\"\n                                                name='title'\n                                                placeholder=\"Title\"\n                                                value={this.state.title}\n                                                onChange={ (e) => this.handleInput(e)}\n                                                \n                                            />\n                                    </div>\n                                        \n                                    <div className=\"form-group\">\n                                        <textarea\n                                                className=\"form-control\"\n                                                type=\"text\"\n                                                name=\"description\" \n                                                placeholder=\"Description\"\n                                                id=\"\" \n                                                rows=\"4\"\n                                                value={this.state.description}\n                                                onChange={ (e) => this.handleInput(e)}\n                                            />\n                                        </div>\n\n                                        <div className=\"form-group\">\n                                            <input\n                                                    className=\"form-control\"\n                                                    type=\"date\"\n                                                    name=\"deadline\" \n                                                    //placeholder=\"Deadline\"\n                                                    value={this.state.deadline}\n                                                    onChange={ (e) => this.handleInput(e)}\n                                                />\n                                    </div>\n                                    \n                                    </div>\n\n                                    \n                                        \n                                    <div className=\"d-flex justify-content-around card-footer\">\n\n                                        <button className=\"btn btn-primary\">Submit</button>\n\n                                        <button\n                                                                className=\"btn btn-primary\"\n                                                                onClick={ () => this.deleteProject()}   \n                                                    >\n                                                    Delete\n                                                    </button>\n                                    </div>\n                                </form>\n                                    \n                                        \n                            </div>\n                    </div>\n            </>\n        )\n    }\n}\n\n\n\nexport default withAuth(EditProject);","import axios from 'axios';\n\n\nclass Task {\n    constructor(){\n\n        this.tasks = axios.create( {\n            baseURL: 'http://localhost:5000/api/',\n            withCredentials: true,\n        })\n    }\n\n\n    getSingleTask = (id) => {\n\n        return this.tasks\n            .get(`/tasks/${id}` )\n            .then( response => {\n                const singleTask = response.data;\n\n                return singleTask\n            })\n            .catch( err => console.log(err))\n    }\n\n\n    getTasksByProject = (singleTask) => {\n        const { projectId, taskId } = singleTask;\n        \n        \n\n        return this.tasks\n            .get(`/projects/${projectId}/tasks/${taskId}`)\n            .then( response => {\n                const projectsTasks = response.data;\n                \n                return projectsTasks;\n            })\n            .catch( err => console.log(err))\n    }\n\n\n    createTask = (newTask) => {\n        const { title, description, deadline, projectId, status, type, done } = newTask;\n        \n\n        return this.tasks\n            .post('/tasks', { title, description, deadline, projectId, status, type, done } )\n            .then( response => {\n                const { newTask  } = response.data\n\n                return newTask\n            })\n            .catch( err => console.log(err))\n    }\n\n\n    updateTask = updatedTask => {\n        const { title, description, deadline, taskId, done, type, status } = updatedTask;\n\n        \n        \n\n        return this.tasks\n            .put(`/tasks/${taskId}`,  { title, description, deadline, done, type, status })\n            .then( response => {\n                const {updatedTask} = response.data;\n\n                return updatedTask\n            })\n            .catch(err => console.log(err))\n    }\n\n\n    deleteTask = (taskToDelete) => {\n        const id = taskToDelete;\n\n        return this.tasks\n            .delete(`/tasks/${id}`, )\n            .catch( err => console.log(err))\n    }\n\n}\n\n\nconst tasksService = new Task();\n\nexport default  tasksService;","import React, { Component } from 'react'\n\nimport tasksService from './../../lib/tasks-service';\nimport { withAuth } from './../../lib/AuthProvider';\n\n\nclass AddTask extends Component {\n        \n    constructor(props){\n        super(props)\n        \n        this.state = {\n            title: '',\n            description: '',\n            deadline: \"\",\n            isShowing: false,\n            type: '',\n            status: '',\n            done: false\n        }\n    }\n\n\n\n    handleChange = e => {\n        const {name, value } = e.target\n\n        this.setState({[name]:value})\n    }\n    \n\n    handleSubmit = e => {\n        e.preventDefault()\n\n        this.createTask()\n    }\n\n\n    toggleForm = e => {\n        this.setState({ isShowing: !this.state.isShowing})\n    }\n\n\n    createTask =  (newTask) => {\n        const { title, description, deadline, status, type, done } = this.state;\n        const projectId = this.props.projectId;\n        \n\n        \n        tasksService.createTask({ title, description, deadline, projectId, status, type, done })\n            .then( (newTask) => {\n                this.setState({ title: '', description: '', deadline: '', isShowing: false})\n                this.props.refreshSingleProject(newTask)\n            })\n            .catch(err => console.log(err))\n    }   \n\n\n    convertDate = () => {\n        const parsedDate = new Date ()\n        \n        var newDeadline = parsedDate.toISOString().substring( 0, 10)\n        this.setState({deadline: newDeadline})\n    }\n\n\n    componentDidMount(){\n        this.convertDate()\n    }\n\n\n    render() {\n\n        \n        return (\n            <>\n                        <div className=\"container\">\n                            <div className=\"card mt-5 mb-3 \">\n\n                            <div className=\"card-header\">\n                            <h5 className=\"card-title\">Add new Task</h5>\n                            </div>\n                                \n                                <form onSubmit={this.handleSubmit} \n                                    >\n                                    \n                                    <div className=\"card-body\">\n\n                                    <div className=\"form-group\">\n                                        <input\n                                                className=\"form-control mb-3\"\n                                                type=\"text\"\n                                                name='title'\n                                                placeholder=\"Title\"\n                                                value={this.state.title}\n                                                onChange={ (e) =>this.handleChange(e)}\n                                            />\n                                    </div>\n                                        \n                                    <div className=\"form-group\">\n                                        <textarea\n                                                className=\"form-control\"\n                                                type=\"text\"\n                                                name=\"description\" \n                                                placeholder=\"Description\"\n                                                id=\"\" \n                                                \n                                                rows=\"4\"\n                                                value={this.state.description}\n                                                onChange={ (e) => this.handleChange(e)}\n                                            />\n                                    </div>\n                                    \n                                    <div className=\"form-group\">\n                                    <select\n                                        className=\"form-control custom-control\"\n                                        type=\"text\"\n                                        name='status'\n                                        id=\"status\"\n                                        \n                                        \n                                        value=\"\"\n                                        onChange={ (e) => this.handleChange(e)}\n                                    >\n                                        <option >to do</option>\n                                        <option >doing</option>\n                                        <option >done</option>\n                                        <option >testing</option>\n                                        <option >backlog</option>\n                                    </select>\n                                    </div>\n                                    \n\n                                    <div className=\"form-group\">\n                                    <select \n                                        type=\"text\"\n                                        name='type'\n                                        id=\"testid\"\n                                        className=\"form-control\"\n                                        \n                                        value=\"\"\n                                        onChange={ (e) => this.handleChange(e)}\n                                    >\n                                        <option >frontend</option>\n                                        <option >backend</option>\n                                        <option >styles</option>\n                                        <option >preperation</option>\n                                    </select>\n                                    </div>\n                                        \n                                    <div className=\"form-group\">\n                                        <input\n                                                type=\"date\"\n                                                name=\"deadline\" \n                                                placeholder=\"Deadline\"\n                                                value={this.state.deadline}\n                                                onChange={ (e) => this.handleChange(e)}\n                                                className=\"form-control custom-control\"\n                                            />\n                                    </div>\n\n                                    </div>  \n                                    <div className=\"card-footer\">\n                                        \n                                        <button className=\"btn btn-primary\">Submit</button>  \n                                    </div>\n                                </form>\n                            </div>\n                        </div>\n                \n            </>\n        )\n    }\n}\n\n\n\nexport default withAuth(AddTask);","import React, { Component } from 'react'\n\nimport { Link } from 'react-router-dom'\n\nclass FilterTask extends Component {\n        state = {\n            title: '',\n            description: '',\n            deadline: '',\n            singleProject: null,\n            tasks: [],\n            typeFilter: '',\n            statusFilter: '',\n            isFiltered: false,\n            allTasks: false\n\n        }\n\n\n    toggleFilterStatus = ( e) => {\n        const { value } = e.target;\n        \n        this.setState({isFiltered: true, statusFilter: value})\n    }\n\n    toggleFilterType = e => {\n        const { value } = e.target;\n\n        this.setState({ isFiltered: true, typeFilter: value})\n    }\n\n    \n\n    // Render tasks filtered by both statusFilter or typeFilter\n    renderFilteredTasks = () => {\n        const { tasks, _id } = this.props.singleProject;\n\n        const statusNotSelected = () => this.state.statusFilter === '' ;\n        const typeNotSelected = () => this.state.typeFilter === '' ;\n        const statusMatch = (task) => task.status === this.state.statusFilter;\n        const typeMatch = (task) => task.type === this.state.typeFilter;\n\n\n        const filteredTasks = tasks.filter( task => {\n            if ( statusNotSelected() ) return true;\n            return statusMatch(task);\n        })\n        .filter( task => {\n            if ( typeNotSelected() ) return true;\n            return typeMatch(task);\n        })\n        .map( task => {\n            return (\n                <div key={task._id} className=\"task-card\" >\n                    <Link to={`/projects/${_id}/tasks/${task._id}`} >\n                        <h5>{task.title}</h5>\n                        <p>{task.description}</p>\n                    </Link>\n                </div>\n            )\n        })\n\n        return filteredTasks;\n    }\n\n    renderAllTasks = () => {\n        const { tasks, _id } = this.props.singleProject;\n\n        return tasks.map( task => {\n            return (\n                <div key={task._id} className=\"task-card\">\n                    <Link to={`/projects/${_id}/tasks/${task._id}`} >\n                        <h5>{task.title}</h5>\n                        <p>{task.description}</p>\n                    </Link>\n                </div>\n            )\n        })\n    }\n\n    componentDidMount(){\n        const { singleProject } = this.props.singleProject;\n\n        this.setState({ singleProject: singleProject})        \n    }\n    \n\n    render() {\n        return (\n            <div>\n                <h1>{this.state.statusFilter}</h1>\n                <h2>{this.state.typeFilter}</h2>\n\n                \n\n                <div className='tasks-container'>\n\n                <div id=\"carouselExampleControls\" className=\"carousel slide\" data-ride=\"carousel\">\n                <div className=\"carousel-inner\">\n                    <div className=\"carousel-item active\">\n\n                        <div className=\"d-flex justify-content-around\">\n                            <h3>All Tasks</h3>\n                        </div>\n                        {\n                            this.props.singleProject.tasks\n                            .map( task => {\n                                return (\n                                    <div className=\"card\" key={task._id}>\n                                        \n                                        <Link to={`/projects/${task.project}/tasks/${task._id}`} >\n                                        <div  className=\"card-header\" >\n                                            <h5 className=\"card-title\">{task.title}</h5>\n                                        </div>\n                                        <div className=\"card-body\">\n                                            <p className=\"card-text\">{task.description}</p>\n                                        </div>\n                                        </Link>\n                                    \n                                </div>\n                                )\n                            })\n                        }\n\n\n\n\n\n                    </div>\n\n                    \n                    <div className=\"carousel-item\">\n\n                        <div className=\"d-flex justify-content-around\">\n                            <h3>Backlog</h3>\n                        </div>\n                        {\n                            this.props.singleProject.tasks.filter( task => {\n                                \n                                return task.status === 'backlog'\n                            })\n                            .map( task => {\n                                return (\n                                    <div className=\"card\" key={task._id}>\n                                        \n                                        <Link to={`/projects/${task.project}/tasks/${task._id}`} >\n                                        <div  className=\"card-header\" >\n                                            <h5 className=\"card-title\">{task.title}</h5>\n                                        </div>\n                                        <div className=\"card-body\">\n                                            <p className=\"card-text\">{task.description}</p>\n                                        </div>\n                                        </Link>\n                                    \n                                </div>\n                                )\n                            })\n                        }\n\n\n\n\n\n                    </div>\n\n\n                    <div className=\"carousel-item\">\n                    \n                        <div className=\"d-flex justify-content-around\">\n                            <h3>To do</h3>\n                        </div>\n                        {\n                            this.props.singleProject.tasks.filter( task => {\n                                \n                                return task.status === 'to do'\n                            })\n                            .map( task => {\n                                return (\n                                    <div className=\"card\" key={task._id}>\n                                        \n                                        <Link to={`/projects/${task.project}/tasks/${task._id}`} >\n                                        <div  className=\"card-header\" >\n                                            <h5 className=\"card-title\">{task.title}</h5>\n                                        </div>\n                                        <div className=\"card-body\">\n                                            <p className=\"card-text\">{task.description}</p>\n                                        </div>\n                                        </Link>\n                                    \n                                </div>\n                                )\n                            })\n                        }\n\n\n                    </div>\n                    <div className=\"carousel-item\">\n                    \n                    <div className=\"d-flex justify-content-around\">\n\n                        <div className=\"d-flex justify-content-around\">\n                            <h3>Done</h3>\n                        </div>\n\n                    </div>\n\n                            {\n                                this.props.singleProject.tasks.filter( task => {\n                                    \n                                    return task.status === 'doing'\n                                })\n                                .map( task => {\n                                    return (\n                                        <div className=\"card\" key={task._id}>\n                                        \n                                                <Link to={`/projects/${task.project}/tasks/${task._id}`} >\n                                                <div  className=\"card-header\" >\n                                                    <h5 className=\"card-title\">{task.title}</h5>\n                                                </div>\n                                                <div className=\"card-body\">\n                                                    <p className=\"card-text\">{task.description}</p>\n                                                </div>\n                                                </Link>\n                                            \n                                        </div>\n                                    )\n                                })\n                            }\n\n\n                    </div>\n\n                    <div className=\"carousel-item\">\n                    \n                            <div className=\"d-flex justify-content-around\">\n                                <h3>Testing</h3>\n                            </div>\n                            {\n                                this.props.singleProject.tasks.filter( task => {\n                                    \n                                    return task.status === 'testing'\n                                })\n                                .map( task => {\n                                    return (\n                                        <div className=\"card\" key={task._id}>\n                                        \n                                        <Link to={`/projects/${task.project}/tasks/${task._id}`} >\n                                        <div  className=\"card-header\" >\n                                            <h5 className=\"card-title\">{task.title}</h5>\n                                        </div>\n                                        <div className=\"card-body\">\n                                            <p className=\"card-text\">{task.description}</p>\n                                        </div>\n                                        </Link>\n                                    \n                                </div>\n                                    )\n                                })\n                            }\n\n\n                    </div>\n\n                        <div className=\"carousel-item\">\n                            <div className=\"d-flex justify-content-around\">\n                                <h3>Done</h3>\n                            </div>\n                            {\n                                this.props.singleProject.tasks.filter( task => {\n                                    \n                                    return task.status === 'done'\n                                })\n                                .map( task => {\n                                    return (\n                                        <div className=\"card\" key={task._id}>\n                                        \n                                                <Link to={`/projects/${task.project}/tasks/${task._id}`} >\n                                                <div  className=\"card-header\" >\n                                                    <h5 className=\"card-title\">{task.title}</h5>\n                                                </div>\n                                                <div className=\"card-body\">\n                                                    <p className=\"card-text\">{task.description}</p>\n                                                </div>\n                                                </Link>\n                                            \n                                        </div>\n                                    )\n                                })\n                            }\n\n\n                    </div>\n                </div>\n                <a className=\"carousel-control-prev\" href=\"#carouselExampleControls\" role=\"button\" data-slide=\"prev\">\n                    <span className=\"carousel-control-prev-icon\" aria-hidden=\"true\"></span>\n                    <span className=\"sr-only\">Previous</span>\n                </a>\n                <a className=\"carousel-control-next\" href=\"#carouselExampleControls\" role=\"button\" data-slide=\"next\">\n                    <span className=\"carousel-control-next-icon\" aria-hidden=\"true\"></span>\n                    <span className=\"sr-only\">Next</span>\n                </a>\n                </div>\n\n\n                {/* {\n\n                    ( this.state.isFiltered) \n                        ? this.renderFilteredTasks()\n                        :  this.renderAllTasks()\n                }         */}\n                </div> \n                \n            </div>\n                \n                    \n            \n            \n\n\n\n        )\n    }\n}\n\n\n\nexport default FilterTask;","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\n\nimport projectsService from './../../lib/projects-service';\n\nimport EditProject from './EditProject';\nimport AddTask from './../tasks/AddTask';\nimport FilterTask from '../tasks/FilterTasks';\n\nclass ProjectDetails extends Component {\n\n\n    constructor(props) {\n        super(props)\n    \n        this.state = {\n            title: '',\n            description: '',\n            deadline: '',\n            singleProject: null,\n            tasks: [],\n            filterType: '',\n            statusBacklog: false,\n            statusTesting: false,\n            statusToDO: false,\n            statusDone: false,\n            showButtons: true,\n            showAddForm: false,\n            showEditForm: false\n        }\n    }\n\n    \n    getSingleProject = () => {\n        const id  = this.props.match.params.id;\n        \n        projectsService.getSingleProject(id) \n        .then( (singleProject) => {\n            this.setState({ singleProject }, () => this.convertDate())\n        })\n        .catch( err => console.log(err))\n    }\n\n    handleChange = (e) => {\n        const value  = e.target;\n\n        this.setState({ filterType: value })\n    }\n\n    renderFilterByTypeForm = input => {\n        const value = input;\n\n        if ( value === 'All in list') {\n            this.state.singleProject.tasks.filter( task => {\n                return task.status === 'testing';\n            })\n            .map( task => {\n                return (\n                    <div key={task._id} className=\"task-container\">\n                        <Link to={`/projects/${this.state.singleProject._id}/tasks/${task._id}`} >\n                            <h5>{task.title}</h5>\n                            <p>{task.description}</p>\n                        </Link>\n                    </div>\n                )\n            })\n        }\n        else {\n            this.state.singleProject.tasks.filter( task => {\n                return task.type === value;\n            })\n            .map( task => {\n                return (\n                    <div key={task._id} className=\"task-container\">\n                        <Link to={`/projects/${this.state.singleProject._id}/tasks/${task._id}`} >\n                            <h5>{task.title}</h5>\n                            <p>{task.description}</p>\n                        </Link>\n                    </div>\n                )\n            })\n        }\n    }\n\n\n    renderEditForm = () => {\n\n        if (!this.state.title && this.state.description ) return null\n        else {\n            return (\n                <div >\n                    <EditProject projectId={this.state.singleProject._id} singleProject={this.state.singleProject} refreshProjectDetails={this.getSingleProject} {...this.props}\n                        deleteProject={this.deleteProject}\n                        className=\"container\"\n                    />\n                </div>\n            )\n\n        }\n    }\n\n\n    toggleAddForm = () => {\n\n        this.setState({ showAddForm: !this.state.showAddForm})\n    }\n\n    toggleEditForm = () => {\n\n        this.setState({ showEditForm: !this.state.showEditForm})\n    }\n\n\n    convertDate = () => {\n        const newDate = this.state.singleProject.deadline\n        const parsedDate = new Date (newDate)\n        \n        var newDeadline = parsedDate.toISOString().substring( 0, 10)\n        this.setState({deadline: newDeadline})\n    }\n\n\n    \n    componentDidMount() {\n        const { id } = this.props.match.params;   \n        this.getSingleProject(id)\n    }\n    \n    render() {\n\n        const { singleProject } = this.state;\n        \n        return (\n            <div  >\n                \n                    {\n                        !singleProject\n                            ? <h1>Loading</h1>\n                            :\n                            (\n                            <div className=\"container\">\n                                <div className=\"mt-3 card\">\n                                        \n                                            <div className=\"card-header\">\n                                            \n                                                <h1>Project:</h1>\n                                        </div>\n\n                                            <div className=\"card-body\">\n                                                <h2 className=\"card-title\">{this.state.singleProject.title}</h2>\n                                                <p className=\"card-text\">{this.state.singleProject.description}</p>\n                                                <p>Deadline: {this.state.deadline}</p>\n                                            </div>\n\n                                            \n                                            \n                                            <div className=\"card-footer\">\n\n                                            <div className=\"container\">\n\n                                            <div className=\"row d-flex justify-content-around\">\n                                                <button onClick={this.toggleAddForm} className=\"btn btn-primary\">Add</button>\n\n                                                <button onClick={this.toggleEditForm} className=\"btn btn-primary\">Edit</button>\n                                            </div>\n\n                                            {\n                                                !this.state.showAddForm\n                                                ?\n                                                null\n                                                :                                                \n                                                <div className=\"row\">\n                                                    <AddTask\n                                                        projectId={this.state.singleProject._id} \n                                                        refreshSingleProject={this.getSingleProject}                                                \n                                                    />\n                                            </div>\n                                            }\n\n                                            {\n                                                !this.state.showEditForm\n                                                ?\n                                                null\n                                                :\n                                                <div className=\"row\">\n                                                    <EditProject projectId={this.state.singleProject._id} singleProject={this.state.singleProject} refreshProjectDetails={this.getSingleProject} {...this.props}\n                                                    deleteProject={this.deleteProject}\n                                                    \n                                                    />\n                                                </div>\n                                            }\n                                    \n                                                \n\n                                    \n\n                                                </div>\n                                                                                                    \n                                            </div>\n\n                                                    \n                                                    \n                                    </div>\n\n                                            <div>\n                                            <FilterTask singleProject={singleProject} {...this.props}/>\n                                            </div>\n\n                                                        \n                                                            \n\n                                \n                                    \n                                    \n                                \n                            </div>\n                                \n                            )\n                \n\n                    }\n            </div>\n        )\n    }\n}\n\n\n\nexport default ProjectDetails;","import React, { Component } from 'react';\nimport { withAuth } from '../../lib/AuthProvider';\nimport { withRouter } from 'react-router-dom';\n\n\n\n\nclass DeleteUser extends Component {\n\n    constructor(props){\n        super(props)\n\n        this.state = {\n            password: '',\n            isShowing: false\n        }\n    }\n\n        toggleForm = e => {\n            this.setState({isShowing: !this.state.isShowing})\n        }\n\n\n        handleInput = e => {\n            const { name, value } = e.target\n\n            this.setState({[name]: value})\n        }\n\n        handleSubmit = e => {\n            e.preventDefault()\n\n            this.deleteUser()\n        }\n\n\n        deleteUser = () =>{\n            \n            this.props.deleteUser()\n                .then( () => {\n                    \n                    this.props.history.push('/')\n                })\n                .catch( err => console.log(err))\n        }\n\n\n    \n\n\n    render() {\n        return (\n            <div>\n                <button onClick={this.toggleForm} className=\"btn btn-primary\">Delete User Profile</button>\n\n                {\n                    !this.state.isShowing ?\n                    null\n                    :\n                    <div >\n                        <h5>Confirm your password to delete Profile</h5>\n\n\n\n                        <form onSubmit={this.handleSubmit}>\n\n                        <div className=\"form-group\">\n                            <label htmlFor=\"delete-user\">Password:</label>\n                            <input\n                                    type=\"password\"\n                                    name=\"password\" \n                                    placeholder=\"password\"\n                                    id=\"delete-user\" \n                                    value={this.state.password}\n                                    onChange={ (e) => this.handleInput(e)}\n                                    className=\"form-control\"\n                            />\n\n                        </div>\n\n                            <button className=\"btn btn-primary\">Delete Profile</button> \n                        </form>\n\n                    </div>\n                }\n\n                \n            </div>\n        )\n    }\n}\n\n\nexport default withRouter(withAuth(DeleteUser));","import React, { Component } from 'react';\n\nimport { withAuth } from './../../lib/AuthProvider';\nimport userService from './../../lib/users-service';\n\nimport DeleteUser from './DeleteUser';\n\n\nclass EditUser extends Component {\n\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            username: '',\n            password: '',\n            email: '',\n            isShowing: ''\n        }\n    }\n\n\n    toggleForm = () => {\n        this.setState({isShowing: !this.state.isShowing})\n    }\n\n\n    handleInput = e => {\n        const { name, value } = e.target;\n\n        this.setState({[name]: value})\n    }\n\n    handleSubmit = e => {\n        e.preventDefault()\n\n        this.patchUser();\n    }\n\n\n    patchUser = () => {\n        const { username, password, email } = this.state;\n        const id = this.props.user._id;\n        \n        // const id = this.props.match.params;\n\n        userService.patchUser( { username, password, email, id } )\n            .then( updatedUser => {\n\n                this.setState({username: '', password: '', email: ''})\n            })\n            .catch( err => console.log(err))\n    }\n\n\n\n    render() {\n\n        return (\n            <div>\n\n\n                    {\n                        !this.state.isShowing ?\n                        \n                            <div className=\"d-flex justify-content-around\">\n                                <button onClick={this.toggleForm} className=\"btn btn-primary\">Edit User</button>\n\n                                <DeleteUser />\n                            </div>\n                        :\n                        (\n\n                            <div>\n                                <form onSubmit={this.handleSubmit}>\n\n                                <div className=\"form-group mt-3\">\n                                    <label htmlFor=\"edit-name\">Name:</label>\n                                    <input \n                                            type=\"text\"\n                                            name='username'\n                                            id=\"edit-name\"\n                                            autoComplete=\"off\"\n                                            className=\"form-control\"\n                                            placeholder={this.props.user.username}\n                                            value={this.state.username}\n                                            onChange={ (e) => this.handleInput(e)}\n                                        />\n                                </div>\n\n                                <div className=\"form-group mt-3\">\n                                    <label htmlFor=\"edit-email\">Email:</label>\n                                    <input\n                                            type=\"text\"\n                                            name=\"email\"\n                                            id=\"edit-email\"\n                                            autoComplete=\"off\"\n                                            className=\"form-control\"\n                                            placeholder=\"email\"\n                                            value={this.state.email}\n                                            onChange={ (e) => this.handleInput(e)}\n                                    />\n                                </div>\n\n                                <div className=\"form-group\">\n                                    <label htmlFor=\"edit-password\">Password:</label>\n                                    <input\n                                            type=\"password\"\n                                            name=\"password\"\n                                            autoComplete=\"off\"\n                                            id=\"edit-password\"\n                                            className=\"form-control\"\n                                            placeholder=\"password\"                                           \n                                            value={this.state.password}\n                                            onChange={ (e) => this.handleInput(e)}\n                                    />\n                                </div>\n\n                                <div className=\"d-flex justify-content-around form-group\">\n                                    <button \n                                        type=\"submit\" \n                                        className=\"btn btn-primary form-control\"\n                                        onClick={ () => {\n                                                        // this.getUserById()\n                                                        this.toggleForm()\n                                        }}\n                                >\n                                        Update\n                                    </button>    \n                                </div>\n                            </form>\n                        </div>\n                        )\n                    }\n            </div>\n        )\n    }\n}\n\n\nexport default withAuth(EditUser);","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom'\nimport { withAuth } from '../../lib/AuthProvider';\nimport userService from '../../lib/users-service';\n\nimport EditUser from './EditUser';\n\n\n\nclass UserProfile extends Component {\n\n    constructor(props){\n        super(props)\n\n        this.state ={\n            username: \"\",\n            password: '',\n            email: '',\n            isShowing: ''\n        }\n    }\n\n    getUserById = () => {\n        const id = this.props.match.params.id;\n\n        userService.getUserById(id)\n            .then( singleUser => {\n                const { username, password, email } = singleUser;\n\n                this.setState({ username, password, email } )\n            })\n            .catch( err => console.log(err))\n    }\n\n\n    componentDidMount() {\n        this.getUserById()\n    }\n\n\n    render() {\n        const { logout } = this.props;\n        return (\n\n\n            <div className=\"container\">\n\n                <div className=\"card mt-3\">\n                    <div className=\"card-header\">\n                        <h3 className=\"card-title\">Profile:</h3>\n\n                    </div>    \n\n                    <div className=\"card-body\">\n                        <h4 className=\"card-title\">{this.state.username}</h4>\n                        \n                        <p className=\"card-title mb-0\">{this.state.email}</p>\n                \n                    </div>\n\n                    \n\n                    \n                    <div className=\"card-footer\">\n                        <EditUser refreshUserProfile={this.getUserById}/>\n\n                    </div>\n                </div>\n\n                <div className=\"d-flex align-content-end\">\n                    <Link to=\"/\">\n                    {' '}\n                    <button className=\"btn btn-primary mt-3\" onClick={logout}>Logout</button>{' '}\n                    </Link>\n                </div>\n\n            </div>\n        )\n    }\n}\n\n\nexport default withAuth(UserProfile)","import React, { Component } from 'react';\nimport { withAuth } from './../lib/AuthProvider';\nimport { Link, withRouter } from 'react-router-dom';\n\n\n\n\nclass NavbarBot extends Component {\n\n\n    goBack = () => {\n\n        this.props.history.goBack()\n    }\n\n\n    render() {\n        const { user, isLoggedin } = this.props;\n\n        \n        return (\n\n            <div>\n\n            \n            { isLoggedin ? (\n                \n                    <nav className=\"navbar  navbar-light bg-dark fixed-bottom\" >\n                            \n                                    <Link to={`/user/${user._id}`} className=\"nav-link nav-brand\">\n                                    {' '}\n                                    <img alt=\"profile\" src=\"/images/person.png\" width=\"30px\" height=\"30px\"></img>\n                                    {' '}\n                                    </Link>\n\n\n                                    {\n                                    \n                                    <button className=\"nav-link nav-brand\" onClick={this.goBack}>\n                                    {' '}\n                                    Go back{' '}\n                                    </button>\n                                \n                                    }\n                                    <Link to=\"/projects\" className=\"nav-link nav-brand\">\n                                    {' '}\n                                    <img alt=\"projects\" src=\"/images/week.png\" width=\"30px\" height=\"30px\"></img>\n                                    {' '}\n                                    </Link>\n                                \n\n{/*                         \n                                \n                        \n\n                                \n                                \n                                    <Link to={`/projects`}  className=\"nav-link nav-brand\">\n                                    {' '}\n                                        Add{' '}\n                                    </Link> */}\n                            \n                            \n                        </nav>\n                        \n    \n                )  \n                :\n                (\n                    <nav className=\"navbar  navbar-light bg-light fixed-bottom\">\n                        \n                    </nav>\n                )}\n\n            </div>\n            \n            \n        )\n    }\n}\n\n\nexport default withRouter(withAuth(NavbarBot));","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport {withAuth} from './../lib/AuthProvider'\n\n\nclass Home extends Component {\n    render() {\n        return (\n            <div className=\"container mt-3\">\n                <Link to=\"/login\">\n                    {' '}\n                    <button>Login</button>{' '}\n                </Link>\n\n                <Link to=\"/signup\">\n                    {' '}\n                    <p>Sign up</p>{' '}\n                </Link>\n\n            </div>\n\n            \n        )\n    }\n}\n\n\nexport default  withAuth(Home);","import React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport { withAuth } from '../lib/AuthProvider';\n\nfunction AnonRoute({ component: Component, isLoggedin, isLoading, ...rest }) {\n\n  if (isLoading) {\n    return <h1>Loading</h1>\n  }\n  else {\n    return (\n      <Route\n        {...rest}\n        render={props =>\n          !isLoggedin ? <Component {...props} /> : <Redirect to=\"/projects\" />\n        }\n      />\n    );\n  }\n}\n\nexport default withAuth(AnonRoute);","import React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport { withAuth } from '../lib/AuthProvider';\n\nfunction PrivateRoute({ component: Component, isLoggedin, isLoading, ...rest }) {\n\n  if (isLoading) {\n    return <h1>Loading</h1>\n  }\n  else {\n    return (\n      <Route\n        {...rest}\n        render={props =>\n          isLoggedin ? <Component {...props} /> : <Redirect to=\"/login\" />\n        }\n      />\n    );\n  }\n}\n\nexport default withAuth(PrivateRoute);","import React, { Component } from 'react';\nimport { withAuth } from '../../lib/AuthProvider';\nimport tasksService from '../../lib/tasks-service';\n\n\nclass EditTask extends Component {\n\n    constructor(props){\n        super(props)\n\n        this.state = {\n            title: \"\",\n            description: \"\",\n            deadline: \"\",\n            isShowing: null,\n            done: false,\n            type: '',\n            status: '',\n            singleTask: {}\n        }\n    }\n\n\n    handleInput = e => {\n        const { name, value } = e.target;\n        this.setState({[name]: value})\n    }\n    \n\n    handleSubmit = e => {\n        e.preventDefault();\n\n        this.updateTask()\n    }\n\n\n    toggleForm = () => {\n        const { description, title, deadline, done, type, status } = this.props.singleTask;\n\n        this.setState({ isShowing: !this.state.isShowing,  description, title, deadline, done, type, status })\n        this.convertDate()\n    }\n\n    toggleChange = () => {\n        this.setState({ done: !this.state.done})\n    }\n\n    deleteTask = () => {\n        const  id  = this.props.match.params.id\n        \n        \n        tasksService.deleteTask(id)\n        .then( (deleteTask) => {\n                \n                this.props.history.goBack()\n            })\n            .catch( err => console.log(err))\n    }\n\n    \n    convertDate = () => {\n        const newDate = this.props.singleTask.deadline\n        const parsedDate = new Date (newDate)\n        \n        var newDeadline = parsedDate.toISOString().substring( 0, 10)\n        this.setState({deadline: newDeadline})\n    }\n\n\n    updateTask = () => {\n        const { title, description, deadline, done, type, status } = this.state;\n        const taskId = this.props.taskId;\n\n        if (!title && !description && !deadline && !done && !type ) return\n        else {\n\n\n            tasksService.updateTask({ title, description, deadline, done, type, status, taskId })\n            .then( updatedTasks => {\n                this.setState({\n                    title: '',\n                    description: '',\n                    deadline: '',\n                    updatedProject: null,\n                    isShowing: false,\n                    isChecked: false,\n                    done: false,\n                    type: '',\n                    status: ''\n                }, () => this.props.history.goBack())\n            })\n            .catch( err => console.log(err))\n        }\n\n        \n    }\n\n    componentDidMount(){\n        const { deadline, description, title, type, status } = this.props.singleTask\n\n        this.setState({ deadline, description, title, type, status })\n        this.convertDate()\n    }\n    \n    \n    render() {\n    \n        const { description } = this.props.singleTask\n        return (\n            <div>\n\n                \n                    {\n                        !this.state.isShowing ?\n                        \n                        <button onClick={this.toggleForm}  className='btn btn-primary'>Edit Task</button>\n\n\n                        :\n                        (\n\n                            <div className=\"card mt-3\">\n                                <form onSubmit={this.handleSubmit}>\n                                \n                                <div className=\"card-header\">\n                                    Edit Task:\n                                </div>\n\n                                <div className=\"card-body\">\n                                    <div className=\"form-group\">\n                                        <input \n                                                type=\"text\"\n                                                name='title'\n                                                className=\"form-control\"\n                                                // defaultValue={title}\n                                                value={this.state.title}\n                                                onChange={ (e) => this.handleInput(e)}\n                                            />\n\n                                    </div>\n\n                                    <div className=\"form-group mt-3\">\n                                        <textarea\n                                                className=\"form-control\"\n                                                type=\"text\"\n                                                name=\"description\"\n                                                value={this.state.description}\n                                                id=\"\" \n                                                cols=\"30\" \n                                                rows=\"4\"\n                                                // defaultValue={description}\n                                                onChange={ (e) => this.handleInput(e)}\n                                            >\n                                            {description}\n\n                                        </textarea>\n                                            \n                                    {/* <div className=\"form-group\">\n                                        <label htmlFor=\"done\">Done</label>\n                                        <input\n                                            className=\"form-control\"\n                                            type=\"checkbox\"\n                                            name='done'\n                                            id=\"done\"\n                                            defaultValue={done}\n                                            onChange={ (e) => {\n                                                this.handleInput(e)\n                                                this.toggleChange(e)\n                                            }}\n                                            checked={this.state.done}\n                                        />\n                                    </div> */}\n\n                                    <div className=\"form-group mt-3\">\n                                        \n                                        <select\n                                            className=\"custom-select form-control\"\n                                            type=\"text\"\n                                            name='status'\n                                            id=\"status\"\n                                            \n                                            // defaultValue={status}\n                                            value={this.state.type}\n                                            onChange={ (e) => this.handleInput(e)}\n                                        >\n                                            <option >to do</option>\n                                            <option >doing</option>\n                                            <option >done</option>\n                                            <option >testing</option>\n                                            <option >backlog</option>\n                                        </select>\n                                    </div>\n\n                                    <div className=\"form-group mt-3 mb-3\">\n                                    \n                                        <select \n                                            type=\"text\"\n                                            name='type'\n                                            id=\"testid\"\n                                            className=\"custom-select form-control\"\n                                            \n                                            value={this.state.type}\n                                            onChange={ (e) => this.handleInput(e)}\n                                        >\n                                            <option >frontend</option>\n                                            <option >backend</option>\n                                            <option >styles</option>\n                                            <option >preperation</option>\n                                        </select>\n                                    </div>\n\n                                    <div className=\"form-group mt-3\">\n                                    \n                                        <input\n                                                type=\"date\"\n                                                name=\"deadline\" \n                                                placeholder=\"Deadline\"\n                                                className=\"form-control custom-select\"\n                                                value={this.state.deadline}\n                                                onChange={ (e) => this.handleInput(e)}\n                                            />\n                                    </div>\n\n                                    </div>\n                                </div>\n\n\n\n\n\n\n                                <div className=\"card-footer d-flex justify-content-around\">\n                                    <button className='btn btn-primary'>Submit</button>\n                                    <button\n                                        className=\"btn btn-primary\"\n                                        onClick={ () => this.deleteTask() }\n                                    >\n                                    Delete Task\n                                </button>    \n                                    </div>\n                                </form>\n                                \n                            </div>\n                        )\n                    }\n            </div>\n        )\n    }\n}\n\n\nexport default withAuth(EditTask);","import React, { Component } from 'react';\n\nimport tasksService from './../../lib/tasks-service';\nimport EditTask from './EditTask';\n\n\n\nclass TaskDetails extends Component {\n        \n        constructor(props) {\n            super(props)\n                this.state = {\n                    title: '',\n                    description: '',\n                    deadline: null,\n                    projectTasks: null,\n                    taskId: '',\n                    projectId: '',\n                    done: '',\n                    type: '',\n                    status: '',\n                    singleTask: {}\n\n                }\n        }\n    \n        \n        getSingleTask = () => {\n            \n            \n            const {id} = this.props.match.params\n            \n            tasksService.getSingleTask(id)\n            .then( singleTask => {\n                \n                this.setState({\n                    title: singleTask.title,\n                    description: singleTask.description,\n                    deadline: singleTask.deadline,\n                    taskId: singleTask._id,\n                    projectId: singleTask.project,\n                    done: singleTask.done,\n                    type: singleTask.type,\n                    singleTask: singleTask,\n                    status: singleTask.status\n                })\n                \n                \n                this.convertDate()\n            })\n            .catch( err => console.log(err))\n        }\n        \n    \n        \n        getProjectTask = () => {\n            const { projectId, taskId } = this.props\n            \n            tasksService.getTasksByProject({ projectId, taskId })\n                .then( singleTask => {\n                    \n                    this.setState({singleTask})\n                })\n                .catch( err => console.log(err))\n        }\n\n        convertDate = () => {\n            const newDate = this.state.deadline\n            const parsedDate = new Date (newDate)\n\n            var newDeadline = parsedDate.toISOString().substring( 0, 10)\n            this.setState({deadline: newDeadline})\n        }\n\n        \n\n        componentDidMount(){\n            \n            this.getSingleTask()\n        }\n\n\n    render() {\n\n        \n        const { title, description, deadline, taskId, status, type, done } = this.state;\n        const singleTask = { title, description, deadline, taskId , status, type, done} \n\n        return (\n            <div className=\"container mt-5\">\n                        <div className=\"card\">\n\n                        <div className=\"card-header\">\n                    \n                            <div className=\"d-flex justify-content-center\">\n                                <EditTask\n                                        className=\"button\"\n                                        taskId={taskId} \n                                        refreshTaskDetails={this.getSingleTask} \n                                        {...this.props} \n                                        singleTask={singleTask}/>\n\n                            </div>\n\n                        </div>\n\n                        <div className=\"card-body\">\n                            <h2 className=\"card-title\">{title}</h2>\n                            <p className=\"card-text\"> {description}</p>\n                            <p>Deadline: {this.state.deadline}</p>\n                            <p>Done: {done}</p>\n\n                        </div>\n\n                        <div className=\"card-footer\">\n\n                            <p>{status}</p>\n                            <p>{type}</p>\n\n                        </div>\n                            \n                            \n                        </div>\n                                \n                            \n\n            </div>\n        )\n    }\n}\n\n\nexport default  TaskDetails;","import React, { Component } from 'react';\nimport { Switch } from 'react-router-dom';\n\nimport Signup from './pages/Signup';\nimport Login from './pages/Login';\nimport Private from './pages/Private';\n\n\nimport ProjectsList from './pages/ProjectsList';\nimport ProjectDetails from './components/projects/ProjectDetails';\nimport UserProfile from './components/user/UserProfile';\nimport NavbarBot from './components/NavbarBot';\nimport Home from '../src/pages/Home';\n\nimport AnonRoute from './components/AnonRoute';\nimport PrivateRoute from './components/PrivateRoute';\n\n// import './App.css'\n// import './styles/navbot.css'\n// import './styles/styles.css'\nimport TaskDetails from './components/tasks/TaskDetails';\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        {/* <Navbar /> */}\n        <NavbarBot />\n        \n\n          <Switch>\n            <AnonRoute exact path=\"/signup\" component={Signup} />\n            <AnonRoute exact path=\"/login\" component={Login} />\n            <AnonRoute exact path=\"/\" component={Home} />\n            <PrivateRoute exact path=\"/private\" component={Private} />\n            <PrivateRoute exact path=\"/projects\" component={ProjectsList} />\n            <PrivateRoute exact path=\"/projects/:id\" component={ProjectDetails} />\n            <PrivateRoute exact path=\"/user/:id\" component={UserProfile} />\n            <PrivateRoute exact path=\"/projects/:id/tasks/:id\" component={TaskDetails}/>\n          </Switch>\n\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n// import './index.css'\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport AuthProvider from './lib/AuthProvider';\n\nReactDOM.render(\n  <Router>\n    <AuthProvider>\n      <App />\n    </AuthProvider>\n  </Router>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}